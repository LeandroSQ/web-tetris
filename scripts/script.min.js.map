{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@babel/runtime/helpers/assertThisInitialized.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js","node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js","node_modules/@babel/runtime/helpers/classPrivateFieldGet.js","node_modules/@babel/runtime/helpers/classPrivateFieldSet.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/defineProperty.js","node_modules/@babel/runtime/helpers/get.js","node_modules/@babel/runtime/helpers/getPrototypeOf.js","node_modules/@babel/runtime/helpers/inherits.js","node_modules/@babel/runtime/helpers/interopRequireDefault.js","node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","node_modules/@babel/runtime/helpers/regeneratorRuntime.js","node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/superPropBase.js","node_modules/@babel/runtime/helpers/typeof.js","node_modules/@babel/runtime/regenerator/index.js","src/scripts/constants.js","src/scripts/controller/particle-controller.js","src/scripts/enum/game-state-type.js","src/scripts/enum/gamepad-key.js","src/scripts/enum/key.js","src/scripts/enum/setting.js","src/scripts/enum/sound-effect.js","src/scripts/enum/tetromino-type.js","src/scripts/extensions.js","src/scripts/level/index.js","src/scripts/level/level0.js","src/scripts/level/level1.js","src/scripts/level/level2.js","src/scripts/level/level3.js","src/scripts/level/level4.js","src/scripts/main.js","src/scripts/model/board.js","src/scripts/model/cell.js","src/scripts/model/falling-piece.js","src/scripts/model/ghost-piece.js","src/scripts/model/level.js","src/scripts/model/piece.js","src/scripts/model/tetromino.js","src/scripts/particle/combo-particle.js","src/scripts/particle/explosion-particle.js","src/scripts/particle/particle.js","src/scripts/state/game-state-menu.js","src/scripts/state/game-state-over.js","src/scripts/state/game-state-pause.js","src/scripts/state/game-state-playing.js","src/scripts/state/game-state.js","src/scripts/ui/ui-bag.js","src/scripts/ui/ui-panel.js","src/scripts/ui/ui-stats.js","src/scripts/util/audio.js","src/scripts/util/color.js","src/scripts/util/image.js","src/scripts/util/input.js","src/scripts/util/locale.js","src/scripts/util/mouse.js","src/scripts/util/preference.js","src/scripts/util/random-bag.js","src/scripts/util/text.js","src/scripts/widget/density-canvas.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","self","ReferenceError","__esModule","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","fn","this","args","arguments","apply","err","undefined","receiver","descriptor","get","set","writable","TypeError","instance","Constructor","privateMap","action","has","classApplyDescriptorGet","classExtractFieldDescriptor","classApplyDescriptorSet","_defineProperties","target","props","enumerable","configurable","Object","defineProperty","protoProps","staticProps","prototype","obj","superPropBase","_get","Reflect","bind","property","base","desc","getOwnPropertyDescriptor","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","default","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","context","state","protoGenerator","Generator","generator","Context","_invoke","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","record","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_setPrototypeOf","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ParticleController","game","_classCallCheck2","_classPrivateFieldInitSpec","_particles","_classPrivateFieldSet2","deltaTime","_classPrivateFieldGet2","particle","update","isAlive","splice","ctx","_step","_iterator","_createForOfIteratorHelper","s","render","MENU","PLAYING","GAMEOVER","PAUSED","_key","GamepadKey","A","B","X","Y","UP_PAD","DOWN_PAD","LEFT_PAD","RIGHT_PAD","LEFT_TRIGGER","RIGHT_TRIGGER","GamepadKeyToKeyboardKey","_defineProperty2","_GamepadKeyToKeyboard","Key","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","SPACE","ENTER","ESCAPE","SHIFT","CONTROL","MUSIC_ENABLED","SOUND_EFFECTS_ENABLED","FALL_PARTICLES_ENABLED","COMBO_PARTICLES_ENABLED","PLACE_BLOCK","GAME_OVER","THEME","SCORE","START_GAME","L","J","I","O","S","Z","T","_constants","window","addLoadEventListener","handler","_func","fired","timeout","addEventListener","document","setTimeout","addVisibilityChangeEventListener","hidden","event","Math","clamp","x","min","max","lerp","current","speed","difference","randomRange","random","randomIntRange","floor","Array","transpose","matrix","rows","cols","grid","j","_j","reverseColumns","reverseRows","CanvasRenderingContext2D","fillTextCentered","str","y","measurement","measureText","fillText","width","fillShape","drawShape","height","_this","roundRect","CELL_RADIUS","rect","circle","arc","PI","triangle","moveTo","lineTo","hexagon","fill","radius","isArray","tl","tr","br","bl","_objectSpread","beginPath","quadraticCurveTo","closePath","fillRoundRect","shuffle","_ref","ArrayBuffer","start","end","that","Uint8Array","resultArray","clear","_level","level","Level","shape","pieces","background","border","page","foreground","list","_densityCanvas","_gameStateType","_board","_level2","_particleController","_gameStateMenu","_gameStatePlaying","_input","_gameStateOver","_cell","_gameStatePause","_uiStats","_uiBag","_locale","Main","_classPrivateMethodInitSpec","_invalidate","_drawFps","_onRender","_onFrame","_onVisibilityChange","_onResize","_onLoad","_attachHooks","_initializeUi","_initializeStates","canvas","DensityCanvas","currentLevelIndex","startFrameTime","lastFrameTime","frameCounter","fpsTimer","fps","board","Board","particleController","_classPrivateMethodGet","_initializeStates2","_initializeUi2","_attachHooks2","Cell","empty","GameStateType","stateMenu","statePlaying","stateOver","statePaused","ui","GameStateOver","GameStateMenu","GameStatePause","GameStatePlaying","score","UIStats","bag","UIBag","_onLoad2","_onResize2","_onVisibilityChange2","LocaleUtils","initialize","attachToElement","querySelector","performance","now","_invalidate2","setSize","innerWidth","GRID_PADDING","innerHeight","size","uiPanelWidthOffset","uiPanels","panel","calculateSize","panelOffset","padding","isVisible","currentGameState","_onRender2","InputUtils","_drawFps2","fillStyle","concat","delay","requestAnimationFrame","_onFrame2","frameTime","TARGET_FRAME_TIME","main","_piece","_renderGrid","GRID_ROWS","columns","GRID_COLS","cellSize","isBufferDirty","buffer","row","rowBuffer","col","fontScale","_renderGrid2","drawBufferTo","piece","column","Piece","color","checkShapeCollision","rowOffset","columnOffset","isCellEmpty","rowsRemovedCount","filled","emptyRow","unshift","setColor","count","cell","strokeStyle","EMPTY_CELL_BACKGROUND","EMPTY_CELL_BORDER","lineWidth","CELL_PADDING","stroke","FallingPiece","tetromino","_super","_assertThisInitialized2","_hardDrop","_handleInput","position","drawPosition","PIECE_MOVING_SPEED","ceil","_handleInput2","move","PIECE_FALLING_SPEED","currentLevel","_ref$x","_ref$y","collided","clockwise","getColorForPiece","isKeyDown","rotate","multiplier","isKeyDownOneshot","_hardDrop2","remainingRows","offset","_color","GhostPiece","_getOwnerShapeDimensions","owner","lastShapeLength","_getOwnerShapeDimensions2","calculateColor","blend","ColorUtils","needToRecalculateCollisions","root","documentElement","style","setProperty","index","_tetrominoType","Tetromino","Tetrominoes","TetrominoType","_particle","ComboParticle","_game","_setFontStyle","_handleTextOverflow","text","_handleTextOverflow2","_get2","_getPrototypeOf2","parseInt","alpha","toString","_setFontStyle2","timeAlive","timeToLive","Particle","actualBoundingBoxAscent","actualBoundingBoxDescent","fontFamily","ExplosionParticle","angle","cos","sin","fillRect","devicePixelRatio","padStart","amount","add","_audio","_soundEffect","_text","_gameState","_setting","_preference","_startThemeSong","_rumbleStartSong","_playGameStartSong","isTransitioning","transitionTimer","progress","isThemePlaying","resetAllKeys","pow","isAnyKeyDown","_playGameStartSong2","save","translate","TextUtils","drawCRT","fontSize","restore","GameState","PreferenceUtils","getSetting","Setting","AudioUtils","play","audio","SoundEffect","volume","loop","cache","onStart","_this2","_rumbleStartSong2","onEnd","_startThemeSong2","beat","doubleBeat","rumbleSequence","force","duration","filter","ghostPiece","fallingPiece","_ghostPiece","_fallingPiece","_randomBag","_comboParticle","_explosionParticle","_tetromino","_onPieceHold","_onPaused","_onTetris","_onLevel","_onGameOver","_onPlacePiece","_checkForTetris","_nextPiece","stats","linesCleared","comboCounter","piecesPlaced","RandomBag","_nextPiece2","_onLevel2","_onPaused2","_onPieceHold2","resetKey","isAnyCellBellowShape","_onPlacePiece2","_step2","_iterator2","_onGameOver2","removeFilledRows","_onTetris2","pitch","place","_checkForTetris2","applyPageColors","setColorForAllCells","lineClearedCount","rumble","comboModifier","newScore","currentPiece","find","nextPiece","lastPiece","peek","UI_PANEL_BACKGROUND","bufferPadding","UIPanel","font","_callee","source","gain","audioData","_regenerator","_context","_ref$pitch","_ref$volume","_ref$loop","_ref$cache","_ref$onStart","_ref$onEnd","_classStaticPrivateMethodGet","_createAudioContext","createBufferSource","_createGainNode","connect","destination","path","_resolveAudioPath","_loadAudio","decodeAudioData","playbackRate","soundFX","location","href","indexOf","pathname","substring","lastIndexOf","AudioContext","webkitAudioContext","createGain","createGainNode","fetch","response","arrayBuffer","data","percentage","colorA","colorB","rgbA","_parseColorValues","rgbB","output","map","_channelMixer","hex","channel","substr","startsWith","split","parseFloat","_getHexChannel","channelA","channelB","filename","_classStaticPrivateFieldSpecGet","ImageUtils","_cache","image","Image","onload","onerror","src","_gamepadKey","_onKey","_onGamepadConnected","_onGamepadDisconnected","_oneShotEventBuffer","_pollGamepad","gamepad","actuator","_args","_connectedGamepadId","navigator","getGamepads","id","actuators","vibrationActuator","hapticActuators","pulse","playEffect","startDelay","weakMagnitude","strongMagnitude","t0","_callee2","states","_context2","_","_pressedKeys","includes","_classStaticPrivateFieldSpecSet","console","log","isPressed","button","buttonIndex","buttons","pressed","keyboardEquivalent","_onKeyInternal","cached","_eventBuffer","ONESHOT_BUTTON_TRIGGER_THRESHOLD","_consumedKeyCodes","pressedKeysIndex","attachListeners","_fetchLocale","_loadLocaleData","_localeData","supportedLanguages","userKnownLanguages","languages","commonGround","request","json","MouseUtils","element","_onMouseDown","_onMouseUp","_onMouseMove","clientX","clientY","setting","enabled","defaultValue","parse","raw","localStorage","getItem","JSON","stringify","setItem","_bag","_ref$color","_ref$fontFamily","_ref$fontSize","_ref$centered","centered","_offsetX","_offsetY","enableHighDPI","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","backingStoreRatio","_getDrawRatio","_getDevicePixelRation","_getBackingStoreRatio","createElement","getContext","virtualWidth","virtualHeight","_getBackingStoreRatio2","_getDevicePixelRation2","drawRatio","_getDrawRatio2","minWidth","minHeight","scale","clearRect","drawImage","appendChild"],"mappings":"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","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nmodule.exports = _classApplyDescriptorGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}\n\nmodule.exports = _classApplyDescriptorSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\n\nmodule.exports = _classExtractFieldDescriptor, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var classApplyDescriptorGet = require(\"./classApplyDescriptorGet.js\");\n\nvar classExtractFieldDescriptor = require(\"./classExtractFieldDescriptor.js\");\n\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n\nmodule.exports = _classPrivateFieldGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var classApplyDescriptorSet = require(\"./classApplyDescriptorSet.js\");\n\nvar classExtractFieldDescriptor = require(\"./classExtractFieldDescriptor.js\");\n\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n\nmodule.exports = _classPrivateFieldSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const GRID_COLS = 10;\nexport const GRID_ROWS = 20;\nexport const GRID_PADDING = 20;\n\nexport const TARGET_FPS = 60;\nexport const TARGET_FRAME_TIME = 1000 / TARGET_FPS;\n\nexport const PIECE_FALLING_SPEED = 0.6;\nexport const PIECE_MOVING_SPEED = 12;\n\nexport const CELL_RADIUS = 8.75;\nexport const CELL_PADDING = 1.75;\n\nexport const UI_PANEL_BACKGROUND = \"rgba(0, 0, 0, 0.40)\";\nexport const EMPTY_CELL_BACKGROUND = \"rgba(0, 0, 0, 0.15)\";\nexport const EMPTY_CELL_BORDER = \"rgba(0, 0, 0, 0.35)\";\n\nexport const ONESHOT_BUTTON_TRIGGER_THRESHOLD = 75;","import { Particle } from \"../particle/particle\";\n\nexport class ParticleController {\n\n\t#particles = [];\n\n\tconstructor(game) {\n\t\tthis.game = game;\n\n\t\tthis.#particles = [];\n\t}\n\n\tupdate(deltaTime) {\n\t\tfor (let i = this.#particles.length - 1; i >= 0; i--) {\n\t\t\t// Updates and renders the particle\n\t\t\tconst particle = this.#particles[i];\n\t\t\tparticle.update(deltaTime);\n\n\t\t\t// If dead, remove from the list\n\t\t\tif (!particle.isAlive) this.#particles.splice(i, 1);\n\t\t}\n\t}\n\n\trender(ctx) {\n\t\tfor (const particle of this.#particles) {\n\t\t\tparticle.render(ctx);\n\t\t}\n\t}\n\n\t/**\n\t * Resets the list of particles\n\t */\n\treset() {\n\t\tthis.#particles = [];\n\t}\n\n\t/**\n\t * Adds a particle to the list\n\t *\n\t * @param {Particle} particle\n\t *\n\t * @return {ParticleController} This instance for chaining\n\t */\n\tadd(particle) {\n\t\tthis.#particles.push(particle);\n\n\t\treturn this;\n\t}\n\n}","export const GameStateType = {\n\t\"MENU\": \"menu\",\n\t\"PLAYING\": \"playing\",\n\t\"GAMEOVER\": \"gameover\",\n\t\"PAUSED\": \"paused\",\n};","import { Key } from \"./key\";\n\nexport const GamepadKey = {\n\t\"A\": 0,\n\t\"B\": 1,\n\t\"X\": 2,\n\t\"Y\": 3,\n\n\t\"UP_PAD\": 12,\n\t\"DOWN_PAD\": 13,\n\t\"LEFT_PAD\": 14,\n\t\"RIGHT_PAD\": 15,\n\n\t\"LEFT_TRIGGER\": 6,\n\t\"RIGHT_TRIGGER\": 7,\n\n\t\"MENU\": 9\n};\n\n\nexport const GamepadKeyToKeyboardKey = {\n\t[GamepadKey.A]: Key.ARROW_UP,/* Rotate */\n\t[GamepadKey.DOWN_PAD]: Key.ARROW_DOWN, /* Down */\n\t[GamepadKey.LEFT_PAD]: Key.ARROW_LEFT, /* Left */\n\t[GamepadKey.RIGHT_PAD]: Key.ARROW_RIGHT, /* Right */\n\t[GamepadKey.B]: Key.SPACE,/* Hard drop */\n\t[GamepadKey.X]: Key.ENTER,/* Rotate */\n\t[GamepadKey.MENU]: Key.ESCAPE,/* Pause */\n\t[GamepadKey.LEFT_TRIGGER]: Key.SHIFT,/* Speed multiply */\n\t[GamepadKey.RIGHT_TRIGGER]: Key.SHIFT,/* Speed multiply */\n\t[GamepadKey.Y]: Key.CONTROL\n};","export const Key = {\n\t\"ARROW_UP\": \"ArrowUp\",\n\t\"ENTER\": \"Enter\",\n\t\"ARROW_DOWN\": \"ArrowDown\",\n\t\"ARROW_LEFT\": \"ArrowLeft\",\n\t\"ARROW_RIGHT\": \"ArrowRight\",\n\t\"SPACE\": \"Space\",\n\t\"ESCAPE\": \"Escape\",\n\t\"SHIFT\": \"Shift\",\n\t\"CONTROL\": \"KeyM\"\n};\n","export const Setting = {\n\t\"MUSIC_ENABLED\": \"music\",\n\t\"SOUND_EFFECTS_ENABLED\": \"soundFX\",\n\t\"FALL_PARTICLES_ENABLED\": \"fallParticles\",\n\t\"COMBO_PARTICLES_ENABLED\": \"comboParticles\"\n};","export const SoundEffect = {\n\t\"PLACE_BLOCK\": \"place.mp3\",\n\t\"GAME_OVER\": \"gameover.wav\",\n\t\"THEME\": \"music.mp3\",\n\t\"SCORE\": \"score.wav\",\n\t\"START_GAME\": \"doot doot.mp3\"\n};","export const TetrominoType = {\n\t\"L\": 0,\n\t\"J\": 1,\n\t\"I\": 2,\n\t\"O\": 3,\n\t\"S\": 4,\n\t\"Z\": 5,\n\t\"T\": 6,\n};","import { CELL_RADIUS } from \"./constants\";\n\nwindow.addLoadEventListener = function (handler, timeout = 1000) {\n\tlet fired = false;\n\n\tconst _func = () => {\n\t\tif (fired) return;\n\t\tfired = true;\n\n\t\thandler();\n\t};\n\n\twindow.addEventListener(\"DOMContentLoaded\", _func);\n\twindow.addEventListener(\"load\", _func);\n\tdocument.addEventListener(\"load\", _func);\n\twindow.addEventListener(\"ready\", _func);\n\tsetTimeout(_func, timeout);\n};\n\nwindow.addVisibilityChangeEventListener = function(handler) {\n\tconst events = [\n\t\t\"visibilitychange\",\n\t\t\"webkitvisibilitychange\",\n\t\t\"mozvisibilitychange\",\n\t\t\"msvisibilitychange\",\n\t];\n\n\tlet fired = false;\n\n\tconst _func = () => {\n\t\tif (fired) return;\n\t\tfired = true;\n\n\t\thandler(!document.hidden);\n\t};\n\n\tevents.forEach((event) => {\n\t\twindow.addEventListener(event, _func);\n\t});\n};\n\nMath.clamp = function(x, min, max) {\n\tif (x > max) return max;\n\telse if (x < min) return min;\n\telse return x;\n};\n\nMath.lerp = function(current, target, speed) {\n\tconst difference = target - current;\n\n\tif (difference > speed) return current + speed;\n\telse if (difference < -speed) return current - speed;\n\telse return current + difference;\n};\n\nMath.randomRange = function(min, max) {\n\treturn Math.random() * (max - min) + min;\n};\n\nMath.randomIntRange = function(min, max) {\n\treturn Math.floor(Math.randomRange(min, max));\n};\n\nArray.prototype.random = function() {\n\treturn this[Math.floor(Math.random() * this.length)];\n};\n\nArray.prototype.transpose = function() {\n\tconst matrix = this.slice(0);\n\tconst rows = matrix.length;\n\tconst cols = matrix[0].length;\n\tconst grid = [];\n\n\tfor (let j = 0; j < cols; j++) {\n\t\tgrid[j] = Array(rows);\n\t}\n\n\tfor (let i = 0; i < rows; i++) {\n\t\tfor (let j = 0; j < cols; j++) {\n\t\t\tgrid[j][i] = matrix[i][j];\n\t\t}\n\t}\n\n\treturn grid;\n};\n\nArray.prototype.reverseColumns = function() {\n\tconst matrix = this;\n\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tmatrix[i] = matrix[i].reverse();\n\t}\n\n\treturn matrix;\n};\n\nArray.prototype.reverseRows = function() {\n\tlet matrix = this;\n\n\tmatrix = matrix.reverse();\n\n\treturn matrix;\n};\n\nCanvasRenderingContext2D.prototype.fillTextCentered = function(str, x, y) {\n\t// Calculate the string boundaries, to center it correctly\n\tconst measurement = this.measureText(str);\n\n\t// Draws the string at the center\n\tthis.fillText(\n\t\tstr,\n\t\tx - measurement.width / 2,\n\t\ty\n\t);\n};\n\nwindow.fillShape = true;\nwindow.drawShape = \"roundRect\";\nCanvasRenderingContext2D.prototype.drawShape = function(x, y, width, height) {\n\tconst a = {\n\t\t\"roundRect\": () => this.roundRect(x, y, width, height, [CELL_RADIUS]),\n\t\t\"rect\": () => this.rect(x, y, width, height),\n\t\t\"circle\": () => {\n\t\t\tconst r = (width + height) / 4;\n\t\t\tthis.arc(x + r, y + r, r, 0, 2 * Math.PI);\n\t\t},\n\t\t\"triangle\": () => {\n\t\t\tthis.moveTo(x, y);\n\t\t\tthis.lineTo(x + width, y);\n\t\t\tthis.lineTo(x + width / 2, y + height);\n\t\t\tthis.lineTo(x, y);\n\t\t},\n\t\t\"hexagon\": () => {\n\t\t\tthis.moveTo(x, y + height / 2);\n\t\t\tthis.lineTo(x + width / 4, y + height);\n\t\t\tthis.lineTo(x + width - width / 4, y + height);\n\t\t\tthis.lineTo(x + width, y + height / 2);\n\t\t\tthis.lineTo(x + width - width / 4, y);\n\t\t\tthis.lineTo(x + width / 4, y);\n\t\t\tthis.lineTo(x, y + height / 2);\n\t\t}\n\t};\n\n\ta[window.drawShape]();\n};\n\nCanvasRenderingContext2D.prototype.fillShape = function(x, y, width, height) {\n\tthis.drawShape(x, y, width, height);\n\tthis.fill();\n};\n\nif (!CanvasRenderingContext2D.prototype.hasOwnProperty(\"roundRect\")) {\n\t// eslint-disable-next-line max-params\n\tCanvasRenderingContext2D.prototype.roundRect = function(x, y, width, height, radius) {\n\t\tlet r = radius;\n\t\tif (Array.isArray(r)) {\n\t\t\tif (r.length <= 1) r = { tl: r[0], tr: r[0], br: r[0], bl: r[0] };\n\t\t\telse r = { tl: r[0] || 0, tr: r[1] || 0, br: r[2] || 0, bl: r[3] || 0 };\n\t\t} else if (typeof r === \"number\") {\n\t\t\tr = { tl: r, tr: r, br: r, bl: r };\n\t\t} else {\n\t\t\tr = { ...{ tl: 0, tr: 0, br: 0, bl: 0 }, ...r };\n\t\t}\n\n\t\tthis.beginPath();\n\t\tthis.moveTo(x + r.tl, y);\n\t\tthis.lineTo(x + width - r.tr, y);\n\t\tthis.quadraticCurveTo(x + width, y, x + width, y + r.tr);\n\t\tthis.lineTo(x + width, y + height - r.br);\n\t\tthis.quadraticCurveTo(x + width, y + height, x + width - r.br, y + height);\n\t\tthis.lineTo(x + r.bl, y + height);\n\t\tthis.quadraticCurveTo(x, y + height, x, y + height - r.bl);\n\t\tthis.lineTo(x, y + r.tl);\n\t\tthis.quadraticCurveTo(x, y, x + r.tl, y);\n\t\tthis.closePath();\n\t};\n}\n\n// eslint-disable-next-line max-params\nCanvasRenderingContext2D.prototype.fillRoundRect = function(x, y, width, height, radius) {\n\tthis.roundRect(x, y, width, height, radius);\n\tthis.fill();\n};\n\nArray.prototype.shuffle = function() {\n\tfor (let i = this.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[this[i], this[j]] = [this[j], this[i]];\n\t}\n\n\treturn this;\n};\n\nif (!ArrayBuffer.prototype.slice) {\n\tArrayBuffer.prototype.slice = function(start, end) {\n\t\tconst that = new Uint8Array(this);\n\t\tif (end == undefined) end = that.length;\n\n\t\tconst result = new ArrayBuffer(end - start);\n\t\tconst resultArray = new Uint8Array(result);\n\t\tfor (let i = 0; i < resultArray.length; i++)\n\t\t\tresultArray[i] = that[i + start];\n\n\t\treturn result;\n\t};\n}\n\nif (!Array.prototype.clear) {\n\tArray.prototype.clear = function() {\n\t\tthis.splice(0, this.length);\n\t};\n}\n","import \"./level0\";\nimport \"./level1\";\nimport \"./level2\";\nimport \"./level3\";\nimport \"./level4\";","import { Level } from \"../model/level\";\n\nconst background = [\n\t\"#01BAEF\", // I\n\t\"#0466c8\", // J\n\t\"#f8961e\", // L\n\t\"#ffd166\", // O\n\t\"#2CDA9D\", // S\n\t\"#ef476f\", // Z\n\t\"#f15bb5\", // T\n];\n\nconst border = [\n\t\"#0193bc\", // I\n\t\"#034c96\", // J\n\t\"#dc7c07\", // L\n\t\"#ffb300\", // O\n\t\"#1fb480\", // S\n\t\"#eb184a\", // Z\n\t\"#d41287\", // T\n];\n\nconst level = new Level({\n\tspeed: 1,\n\tshape: \"roundRect\",\n\tfillShape: true,\n\tpieces: { background, border },\n\tpage: {\n\t\tbackground: \"#073B4C\",\n\t\tforeground: \"#ecf0f1\",\n\t},\n});\n\nLevel.list.push(level);","import { Level } from \"../model/level\";\n\nconst background = [\n\t\"#01BAEF\", // I\n\t\"#0466c8\", // J\n\t\"#f8961e\", // L\n\t\"#ffd166\", // O\n\t\"#2CDA9D\", // S\n\t\"#ef476f\", // Z\n\t\"#f15bb5\", // T\n];\n\nconst border = [\n\t\"#0193bc\", // I\n\t\"#034c96\", // J\n\t\"#dc7c07\", // L\n\t\"#ffb300\", // O\n\t\"#1fb480\", // S\n\t\"#eb184a\", // Z\n\t\"#d41287\", // T\n];\n\nconst level = new Level({\n\tspeed: 1.75,\n\tshape: \"rect\",\n\tfillShape: true,\n\tpieces: { background, border },\n\tpage: {\n\t\tbackground: \"#073B4C\",\n\t\tforeground: \"#ecf0f1\",\n\t},\n});\n\nLevel.list.push(level);","import { Level } from \"../model/level\";\n\nconst background = [\n\t\"#8be9fd\", // I\n\t\"#6272a4\", // J\n\t\"#ffb86c\", // L\n\t\"#f1fa8c\", // O\n\t\"#50fa7b\", // S\n\t\"#ff5555\", // Z\n\t\"#ff79c6\", // T\n];\n\nconst border = [\n\t\"#59e0fc\", // I\n\t\"#4d5b86\", // J\n\t\"#ff9f39\", // L\n\t\"#ebf85b\", // O\n\t\"#1ef956\", // S\n\t\"#ff2222\", // Z\n\t\"#ff46b0\", // T\n];\n\nconst level = new Level({\n\tspeed: 2.5,\n\tshape: \"rect\",\n\tfillShape: false,\n\tpieces: { background, border },\n\tpage: {\n\t\tbackground: \"#282a36\",\n\t\tforeground: \"#f8f8f2\",\n\t},\n});\n\nLevel.list.push(level);","import { Level } from \"../model/level\";\n\nconst background = [\n\t\"#a1efe4\", // I\n\t\"#65d9ef\", // J\n\t\"#fd971e\", // L\n\t\"#e6db74\", // O\n\t\"#a7e22d\", // S\n\t\"#f92572\", // Z\n\t\"#fd5fef\", // T\n];\n\nconst border = [\n\t\"#75e8d7\", // I\n\t\"#37ceea\", // J\n\t\"#e67e02\", // L\n\t\"#ded049\", // O\n\t\"#8bc11b\", // S\n\t\"#e50657\", // Z\n\t\"#fc2cea\", // T\n];\n\nconst level = new Level({\n\tspeed: 3.75,\n\tshape: \"circle\",\n\tfillShape: true,\n\tpieces: { background, border },\n\tpage: {\n\t\tbackground: \"#272822\",\n\t\tforeground: \"#f8f8f2\",\n\t},\n});\n\nLevel.list.push(level);","import { Level } from \"../model/level\";\n\nconst background = [\n\t\"#03a9f4\", // I\n\t\"#304ffe\", // J\n\t\"#fb8c00\", // L\n\t\"#ffeb3b\", // O\n\t\"#4caf50\", // S\n\t\"#f44336\", // Z\n\t\"#ec407a\", // T\n];\n\nconst border = [\n\t\"#0286c1\", // I\n\t\"#0127fa\", // J\n\t\"#c87000\", // L\n\t\"#ffe608\", // O\n\t\"#3d8b40\", // S\n\t\"#ea1c0d\", // Z\n\t\"#e2175b\", // T\n];\n\nconst level = new Level({\n\tspeed: 5.75,\n\tshape: \"hexagon\",\n\tfillShape: true,\n\tpieces: { background, border },\n\tpage: {\n\t\tbackground: \"#263238\",\n\t\tforeground: \"#fafafa\",\n\t},\n});\n\nLevel.list.push(level);","import \"./extensions\";\nimport \"./level\";\nimport { DensityCanvas } from \"./widget/density-canvas\";\nimport { GRID_PADDING, TARGET_FRAME_TIME } from \"./constants\";\nimport { GameStateType } from \"./enum/game-state-type\";\nimport { Board } from \"./model/board\";\nimport { Level } from \"./model/level\";\nimport { ParticleController } from \"./controller/particle-controller\";\nimport { GameStateMenu } from \"./state/game-state-menu\";\nimport { GameState } from \"./state/game-state\";\nimport { GameStatePlaying } from \"./state/game-state-playing\";\nimport { InputUtils } from \"./util/input\";\nimport { MouseUtils } from \"./util/mouse\";\nimport { GameStateOver } from \"./state/game-state-over\";\nimport { Cell } from \"./model/cell\";\nimport { GameStatePause } from \"./state/game-state-pause\";\nimport { UIStats } from \"./ui/ui-stats\";\nimport { UIPanel } from \"./ui/ui-panel\";\nimport { UIBag } from \"./ui/ui-bag\";\nimport { LocaleUtils } from \"./util/locale\";\n\nexport class Main {\n\n\tconstructor() {\n\t\t// Setup canvas\n\t\tthis.canvas = new DensityCanvas();\n\t\tthis.ctx = this.canvas.context;\n\n\t\t// Misc variables\n\t\tthis.currentLevelIndex = 0;\n\n\t\t// Frame rate variables\n\t\tthis.startFrameTime = 0;\n\t\tthis.lastFrameTime = 0;\n\t\tthis.frameCounter = 0;\n\t\tthis.fpsTimer = 0;\n\t\tthis.fps = 0;\n\n\t\t// Initialize controllers\n\t\tthis.board = new Board();\n\t\tthis.particleController = new ParticleController(this);\n\n\t\t// Initialize states\n\t\tthis.#initializeStates();\n\n\t\t// Initialize ui panels\n\t\tthis.#initializeUi();\n\n\t\t// Hook events\n\t\tthis.#attachHooks();\n\t}\n\n\t#initializeStates() {\n\t\tthis.state = GameStateType.MENU;\n\t\tthis.stateOver = new GameStateOver(this);\n\t\tthis.stateMenu = new GameStateMenu(this);\n\t\tthis.statePaused = new GameStatePause(this);\n\t\tthis.statePlaying = new GameStatePlaying(this);\n\t}\n\n\t#initializeUi() {\n\t\tthis.ui = {\n\t\t\tscore: new UIStats(this),\n\t\t\tbag: new UIBag(this)\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.currentLevelIndex = 0;\n\t\tthis.board.fill(Cell.empty);\n\t}\n\n\t// #region Event handlers\n\t#attachHooks() {\n\t\twindow.addLoadEventListener(this.#onLoad.bind(this));\n\t\twindow.addEventListener(\"resize\", this.#onResize.bind(this));\n\t\twindow.addVisibilityChangeEventListener(this.#onVisibilityChange.bind(this));\n\n\t\t// Initialize mouse utility\n\t\t// MouseUtils.attachHooks(this.canvas.canvas);\n\t}\n\n\tasync #onLoad() {\n\t\t// Initialize the locale utility\n\t\tawait LocaleUtils.initialize();\n\n\t\t// Attach the canvas to the document body\n\t\tthis.canvas.attachToElement(document.querySelector(\"#wrapper\"));\n\n\t\t// Set the initial sizing of the canvas\n\t\tthis.#onResize();\n\n\t\t// Request the first frame\n\t\tthis.lastFrameTime = performance.now();\n\t\tthis.#invalidate();\n\t}\n\n\t#onResize() {\n\t\t// Calculate the board size\n\t\tthis.board.setSize({\n\t\t\twidth: window.innerWidth - GRID_PADDING * 2,\n\t\t\theight: window.innerHeight - GRID_PADDING * 2,\n\t\t});\n\n\t\t// Fetch the window size\n\t\tconst size = {\n\t\t\twidth: this.board.width,\n\t\t\theight: this.board.height\n\t\t};\n\n\t\t// Calculate offsets based on detached UI Panels\n\t\tlet uiPanelWidthOffset = 0;\n\t\tthis.uiPanels.forEach((panel) => {\n\t\t\t// Calculate the panel size based on the board size\n\t\t\tpanel.calculateSize(size);\n\n\t\t\t// Increase the canvas width to accommodate the panel, if needed\n\t\t\tconst panelOffset = panel.size.width + panel.padding;\n\t\t\tif (panelOffset > uiPanelWidthOffset) uiPanelWidthOffset = panelOffset;\n\t\t});\n\t\tsize.width += uiPanelWidthOffset;\n\n\t\t// Set the canvas size\n\t\tthis.canvas.setSize(size);\n\t}\n\n\t#onVisibilityChange(isVisible) {\n\t\tif (!isVisible && this.currentGameState == GameStateType.PLAYING) {\n\t\t\tthis.currentGameState = GameStateType.PAUSED;\n\t\t\tthis.lastFrameTime = performance.now();\n\t\t}\n\t}\n\n\t#onFrame() {\n\t\t// Calculate the delta time\n\t\tthis.startFrameTime = performance.now();\n\t\tconst deltaTime = (this.startFrameTime - this.lastFrameTime) / 1000;\n\n\t\t// Handle fps counter\n\t\tthis.frameCounter ++;\n\t\tthis.fpsTimer += deltaTime;\n\t\tif (this.fpsTimer > 1) {\n\t\t\tthis.fpsTimer -= 1;\n\t\t\tthis.fps = this.frameCounter;\n\t\t\tthis.frameCounter = 0;\n\t\t}\n\n\t\t// Render the frame\n\t\tthis.#onRender(deltaTime);\n\n\t\t// Request next frame\n\t\tthis.#invalidate();\n\t}\n\t// #endregion\n\n\t// #region Rendering\n\t#onRender(deltaTime) {\n\t\t// Clear canvas\n\t\tthis.canvas.clear();\n\n\t\t// Update gamepad, if available\n\t\tInputUtils.update();\n\n\t\t// Update current game state\n\t\tconst state = this.currentGameState;\n\t\tstate?.update(deltaTime);\n\t\tstate?.render(this.ctx, deltaTime);\n\n\t\t// Draw FPS Counter\n\t\tthis.#drawFps();\n\t}\n\n\t#drawFps() {\n\t\t// Draw FPS Counter\n\t\tthis.ctx.fillStyle = \"white\";\n\t\tthis.ctx.fillText(`${this.fps} FPS`, 10, 20);\n\t}\n\t// #endregion\n\n\t#invalidate() {\n\t\tif (window.hasOwnProperty(\"requestAnimationFrame\")) {\n\t\t\trequestAnimationFrame(this.#onFrame.bind(this));\n\t\t} else {\n\t\t\t// Calculate the time the frame took\n\t\t\tconst frameTime = (this.startFrameTime - performance.now());\n\t\t\t// Compensate delays or rushes from this frame in the timing for the next\n\t\t\tconst delay = Math.clamp(TARGET_FRAME_TIME - frameTime, 0, TARGET_FRAME_TIME);\n\t\t\t// Schedule next frame\n\t\t\tsetTimeout(this.#onFrame.bind(this), delay);\n\t\t}\n\n\t\tthis.lastFrameTime = performance.now();\n\t}\n\n\t/**\n\t * @return {Level}\n\t */\n\tget currentLevel() {\n\t\treturn Level.list[this.currentLevelIndex];\n\t}\n\n\t/**\n\t * @return {GameState}\n\t */\n\tget currentGameState() {\n\t\tswitch (this.state) {\n\t\t\tcase GameStateType.MENU:\n\t\t\t\treturn this.stateMenu;\n\n\t\t\tcase GameStateType.PLAYING:\n\t\t\t\treturn this.statePlaying;\n\n\t\t\tcase GameStateType.GAMEOVER:\n\t\t\t\treturn this.stateOver;\n\n\t\t\tcase GameStateType.PAUSED:\n\t\t\t\treturn this.statePaused;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * @return {Array<UIPanel>}\n\t */\n\tget uiPanels() {\n\t\t/* const buffer = [];\n\t\tfor (const key in this.ui) {\n\t\t\tif (this.ui.hasOwnProperty(key)) buffer.push(this.ui[key]);\n\t\t} */\n\n\t\treturn Object.values(this.ui);\n\t}\n\n}\n\nwindow.main = new Main();","import { CELL_RADIUS, GRID_COLS, GRID_ROWS } from \"../constants\";\nimport { Cell } from \"./cell\";\nimport { DensityCanvas } from \"../widget/density-canvas\";\nimport { Piece } from \"./piece\";\n\nexport class Board {\n\n\tconstructor() {\n\t\t// Define the grid size\n\t\tthis.rows = GRID_ROWS;\n\t\tthis.columns = GRID_COLS;\n\t\tthis.grid = [];\n\n\t\t// Fill the grid with empty cells\n\t\tthis.fill(Cell.empty);\n\n\t\t// Define the cell sizing\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.cellSize = 0;\n\n\t\t// Define the render buffer\n\t\tthis.isBufferDirty = true;\n\t\tthis.buffer = new DensityCanvas();\n\t}\n\n\tfill(value) {\n\t\tthis.grid = [];\n\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tconst rowBuffer = [];\n\n\t\t\tfor (let col = 0; col < this.columns; col++) {\n\t\t\t\trowBuffer.push(value);\n\t\t\t}\n\n\t\t\tthis.grid.push(rowBuffer);\n\t\t}\n\t}\n\n\tsetSize({ width, height }) {\n\t\t// Calculate the cell size\n\t\tthis.cellSize = Math.floor(Math.min(width / this.columns, height / this.rows));\n\t\twindow.fontScale = this.cellSize / 41;\n\n\t\t// Calculate the board size based on the cell size\n\t\tthis.width = this.cellSize * this.columns;\n\t\tthis.height = this.cellSize * this.rows;\n\n\t\t// Set the buffer size\n\t\tthis.buffer.setSize({\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t});\n\t}\n\n\trender(ctx) {\n\t\t// Generate the canvas buffer\n\t\tif (this.isBufferDirty) this.#renderGrid();\n\n\t\t// Draws the buffer to the main canvas\n\t\tthis.buffer.drawBufferTo(0, 0, ctx);\n\t}\n\n\t#renderGrid() {\n\t\t// Clear the buffer canvas\n\t\tthis.buffer.clear();\n\n\t\tthis.buffer.context.fillStyle = \"rgba(0, 0, 0, 0.35)\";\n\t\tthis.buffer.context.fillRoundRect(0, 0, this.width, this.height, [CELL_RADIUS]);\n\n\t\t// Draws every cell in the grid to the buffer canvas\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tfor (let col = 0; col < this.columns; col++) {\n\t\t\t\tconst cell = this.grid[row][col];\n\t\t\t\tCell.render(this.buffer.context, cell, col, row, this.cellSize);\n\t\t\t}\n\t\t}\n\t}\n\n\tinvalidate() {\n\t\tthis.isBufferDirty = true;\n\t}\n\n\t/**\n\t * Places a given piece into the grid\n\t * Transforming it's shape into grid cells\n\t *\n\t * @param {Piece} piece The piece to be placed on to the grid\n\t */\n\tplace(piece) {\n\t\tfor (let row = 0; row < piece.height; row++) {\n\t\t\tfor (let column = 0; column < piece.width; column++) {\n\t\t\t\t// Ignore empty cells\n\t\t\t\tif (piece.shape[row][column] === Piece.empty) continue;\n\n\t\t\t\tconst x = column + piece.x;\n\t\t\t\tconst y = row + piece.y;\n\n\t\t\t\t// Place the new cell into the grid\n\t\t\t\tthis.grid[y][x] = new Cell(piece.color);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Detects whether there is a cell bellow the provided piece\n\t *\n\t * @param {BasePiece} piece\n\t *\n\t * @return {Boolean} False when no cell bellow the piece, True when there is at least one cell bellow the piece\n\t */\n\tisAnyCellBellowShape(piece) {\n\t\treturn this.checkShapeCollision(piece, 1, 0);\n\t}\n\n\t/**\n\t * Detects whether there is a cell colliding with the provided piece\n\t *\n\t * @param {BasePiece} piece\n\t * @param {Number} rowOffset The Y offset\n\t * @param {Number} columnOffset The X offset\n\t *\n\t * @return {Boolean} False when no cell is colliding the piece, True when there is one\n\t */\n\tcheckShapeCollision(piece, rowOffset = 0, columnOffset = 0) {\n\t\tfor (let row = 0; row < piece.height; row++) {\n\t\t\tfor (let column = 0; column < piece.width; column++) {\n\t\t\t\t// Skip the empty cells of the piece\n\t\t\t\tif (piece.shape[row][column] === Piece.empty) continue;\n\n\t\t\t\t// Calculate the position below the piece's cell\n\t\t\t\tconst x = column + piece.x + columnOffset;\n\t\t\t\tconst y = row + piece.y + rowOffset;\n\n\t\t\t\t// Skip the overflown and empty cells\n\t\t\t\tif (y < 0 || x < 0 || x >= this.columns || y >= this.rows || this.isCellEmpty(y, x))\n\t\t\t\t\tcontinue;\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Checks whether the given cell is empty\n\t *\n\t * @param {number} row\n\t * @param {number} column\n\t *\n\t * @return {boolean} True when the cell is empty, False when the cell is not empty\n\t */\n\tisCellEmpty(row, column) {\n\t\t// if (row < 0 || row >= this.grid.length || column < 0 || column >= this.grid[0].length) return true;\n\n\t\treturn this.grid[row][column] === Cell.empty;\n\t}\n\n\t/**\n\t * Removes all the rows that are completely filled from the board\n\t *\n\t * @return {number} The amount of removed filled rows\n\t */\n\tremoveFilledRows() {\n\t\tlet rowsRemovedCount = 0;\n\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tlet filled = true;\n\n\t\t\tfor (let column = 0; column < this.columns; column++) {\n\t\t\t\t// Ignore empty cells\n\t\t\t\tif (this.isCellEmpty(row, column)) {\n\t\t\t\t\t// Notify that the row wasn't all filled\n\t\t\t\t\tfilled = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the row was totally filled\n\t\t\tif (filled) {\n\t\t\t\trowsRemovedCount++;\n\n\t\t\t\t// Create an empty row\n\t\t\t\tconst emptyRow = [];\n\t\t\t\tfor (let i = 0; i < this.columns; i++)\n\t\t\t\t\temptyRow.push(Cell.empty);\n\n\t\t\t\tthis.grid.splice(row, 1);\n\n\t\t\t\t// Push the empty row at index 0, shifting all rows down\n\t\t\t\tthis.grid.unshift(emptyRow);\n\t\t\t}\n\t\t}\n\n\t\treturn rowsRemovedCount;\n\t}\n\n\tsetColorForAllCells(background, border) {\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tfor (let column = 0; column < this.columns; column++) {\n\t\t\t\t// Detect non-empty cells\n\t\t\t\tif (!this.isCellEmpty(row, column)) {\n\t\t\t\t\t// Increment the row counter and exit the column for\n\t\t\t\t\tconst cell = this.grid[row][column];\n\t\t\t\t\tcell.setColor(background, border);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tget rowsWithAtLeastOneCell() {\n\t\tlet count = 0;\n\n\t\tfor (let row = 0; row < this.rows; row++) {\n\t\t\tfor (let column = 0; column < this.columns; column++) {\n\t\t\t\t// Detect non-empty cells\n\t\t\t\tif (!this.isCellEmpty(row, column)) {\n\t\t\t\t\t// Increment the row counter and exit the column for\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n}","import { CELL_PADDING, CELL_RADIUS, EMPTY_CELL_BACKGROUND, EMPTY_CELL_BORDER } from \"../constants\";\n\nexport class Cell {\n\n\t/**\n\t * @param {Object} color\n\t * @param {string} color.background HEX format color\n\t * @param {string} color.border HEX format color\n\t */\n\tconstructor(color) {\n\t\tthis.color = color;\n\t}\n\n\tsetColor(background, border) {\n\t\tthis.color.background = background;\n\t\tthis.color.border = border;\n\t}\n\n\t/**\n\t * Draws the cell to the canvas\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Cell} [cell] When null, draws the empty cell\n\t * @param {number} column\n\t * @param {number} row\n\t * @param {number} cellSize\n\t */\n\t// eslint-disable-next-line max-params\n\tstatic render(ctx, cell, column, row, cellSize) {\n\t\tif (cell) {\n\t\t\t// Filled cell\n\t\t\tctx.fillStyle = cell.color.background;\n\t\t\tctx.strokeStyle = cell.color.border;\n\t\t} else {\n\t\t\t// Empty cell\n\t\t\tctx.fillStyle = EMPTY_CELL_BACKGROUND;\n\t\t\tctx.strokeStyle = EMPTY_CELL_BORDER;\n\t\t}\n\n\t\t// Draw cell\n\t\tctx.lineWidth = window.fillShape ? 1 : 2;\n\t\tctx.beginPath();\n\t\tctx.drawShape(\n\t\t\tcolumn * cellSize + CELL_PADDING,\n\t\t\trow * cellSize + CELL_PADDING,\n\t\t\tcellSize - CELL_PADDING * 2,\n\t\t\tcellSize - CELL_PADDING * 2\n\t\t);\n\n\t\tif (window.fillShape) ctx.fill();\n\t\tctx.stroke();\n\t\t// ctx.closePath();\n\t}\n\n\tstatic get empty() {\n\t\treturn null;\n\t}\n\n}\n","import { Piece } from \"./piece\";\nimport { Tetromino } from \"./tetromino\";\nimport { Main } from \"../main\";\nimport { InputUtils } from \"../util/input\";\nimport { Key } from \"../enum/key\";\nimport { PIECE_FALLING_SPEED, PIECE_MOVING_SPEED } from \"../constants\";\n\nexport class FallingPiece extends Piece {\n\n\t/**\n\t * @param {Main} game\n\t * @param {Tetromino} tetromino\n\t */\n\tconstructor(game, tetromino) {\n\t\tsuper();\n\n\t\tthis.game = game;\n\n\t\t// Store the tetromino type and shape\n\t\tthis.type = tetromino.type;\n\t\tthis.shape = tetromino.shape;\n\n\t\t// Starts the piece at the top-center of the board\n\t\tthis.position = {\n\t\t\tx: game.board.columns / 2 - this.width / 2,\n\t\t\ty: -1,\n\t\t};\n\t\tthis.drawPosition = { x: this.position.x, y: this.position.y };\n\t}\n\n\tupdate(deltaTime) {\n\t\tconst speed = PIECE_MOVING_SPEED * deltaTime;\n\t\tthis.drawPosition.x = Math.lerp(this.drawPosition.x, Math.floor(this.position.x), speed);\n\t\tthis.drawPosition.y = Math.lerp(this.drawPosition.y, Math.ceil(this.position.y), speed * 2);\n\n\t\t// Handles the user input\n\t\tthis.#handleInput(deltaTime);\n\n\t\t// Apply the falling speed to the piece\n\t\tthis.move({\n\t\t\tx: 0,\n\t\t\ty: PIECE_FALLING_SPEED * deltaTime * this.game.currentLevel.speed,\n\t\t});\n\t}\n\n\t/**\n\t * Moves the piece based on user input\n\t *\n\t * @param {number} deltaTime\n\t */\n\t// eslint-disable-next-line complexity, max-statements\n\t#handleInput(deltaTime) {\n\t\tif (InputUtils.isKeyDown(Key.ARROW_UP)) {\n\t\t\tthis.rotate(true);\n\t\t} else if (InputUtils.isKeyDown(Key.ENTER)) {\n\t\t\tthis.rotate(false);\n\t\t}\n\n\t\t// Increase the horizontal movement speed\n\t\tconst multiplier = InputUtils.isKeyDown(Key.SHIFT) ? 1.5 : 1;\n\n\t\t// Really fast button trigger, move instantly\n\t\tif (InputUtils.isKeyDownOneshot(Key.ARROW_LEFT)) {\n\t\t\tthis.position.x = Math.ceil(this.drawPosition.x) - 1;\n\t\t\tthis.move({ x: 0, y: 0 });\n\t\t\tthis.drawPosition.x = this.position.x;\n\t\t} else if (InputUtils.isKeyDown(Key.ARROW_LEFT)) {\n\t\t\tthis.move({ x: -PIECE_MOVING_SPEED * deltaTime * multiplier, y: 0 });\n\t\t}\n\n\t\tif (InputUtils.isKeyDownOneshot(Key.ARROW_RIGHT)) {\n\t\t\tthis.position.x = Math.floor(this.drawPosition.x) + 1;\n\t\t\tthis.move({ x: 0, y: 0 });\n\t\t\tthis.drawPosition.x = this.position.x;\n\t\t} else if (InputUtils.isKeyDown(Key.ARROW_RIGHT)) {\n\t\t\tthis.move({ x: PIECE_MOVING_SPEED * deltaTime * multiplier, y: 0 });\n\t\t}\n\n\t\t/* if (!InputUtils.isKeyDown(Key.ARROW_LEFT) && !InputUtils.isKeyDown(Key.ARROW_RIGHT)) {\n\t\t\tthis.position.x = Math.floor(this.position.x) + 0.5;\n\t\t} */\n\n\t\tif (InputUtils.isKeyDown(Key.ARROW_DOWN)) {\n\t\t\tthis.move({ x: 0, y: PIECE_MOVING_SPEED * deltaTime * 2 * multiplier });\n\t\t} else if (InputUtils.isKeyDown(Key.SPACE)) {\n\t\t\tthis.#hardDrop();\n\t\t}\n\t}\n\n\t#hardDrop() {\n\t\tconst remainingRows = Math.ceil(this.game.board.rows - this.height - this.position.y);\n\t\tthis.position.y = Math.ceil(this.position.y);\n\t\tthis.drawPosition.y = this.position.y;\n\t\tlet offset = 0;\n\n\t\tfor (let i = 0; i < remainingRows; i++) {\n\t\t\t// Increase it\n\t\t\toffset++;\n\n\t\t\t// Check for collisions with other pieces\n\t\t\tif (this.game.board.checkShapeCollision(this, offset)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Check for collisions with the board's bottom line\n\t\t\tif (this.position.y + offset + this.height > this.game.board.rows) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\toffset--;\n\t\tthis.position.y += offset;\n\t\tthis.drawPosition.y = this.position.y;\n\t}\n\n\t/**\n\t * Moves the piece by the given amount\n\t *\n\t * @param {object} obj\n\t * @param {number} [obj.x]\n\t * @param {number} [obj.y]\n\t *\n\t * @return {boolean} True when the move is valid\n\t */\n\t// eslint-disable-next-line max-statements\n\tmove({ x = 0, y = 0 }) {\n\t\tconst board = this.game.board;\n\n\t\t// Apply the movement to the piece\n\t\tthis.position.x += x;\n\t\tthis.position.y += y;\n\n\t\t// Check for collisions\n\t\tif (board.checkShapeCollision(this)) {\n\t\t\t// If there is a collision, undo the movement\n\t\t\tthis.position.x -= x;\n\t\t\tthis.position.y -= y;\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for board boundaries\n\t\tlet collided = false;\n\t\tif (this.x < 0) {\n\t\t\tthis.position.x = 0;\n\t\t\tcollided = true;\n\t\t} else if (this.x + this.width > board.columns) {\n\t\t\tthis.position.x = board.columns - this.width;\n\t\t\tcollided = true;\n\t\t}\n\n\t\tif (this.y < 0) {\n\t\t\tthis.position.y = 0;\n\t\t\tcollided = true;\n\t\t} else if (this.y + this.height > board.rows) {\n\t\t\tthis.position.y = board.rows - this.height;\n\t\t\tcollided = true;\n\t\t}\n\n\t\treturn !collided;\n\t}\n\n\t/**\n\t * Rotates the piece\n\t *\n\t * @param {boolean} clockwise Wether to rotate clockwise or anti-clockwise\n\t */\n\trotate(clockwise) {\n\t\tif (clockwise)\n\t\t\tthis.shape = this.shape.transpose().reverseRows();\n\t\telse\n\t\t\tthis.shape = this.shape.reverseRows().transpose();\n\t}\n\n\tget color() {\n\t\treturn this.game.currentLevel.getColorForPiece(this.type);\n\t}\n\n\tget width() {\n\t\treturn this.shape[0].length;\n\t}\n\n\tget height() {\n\t\treturn this.shape.length;\n\t}\n\n\tget x() {\n\t\treturn Math.floor(this.position.x);\n\t}\n\n\tget y() {\n\t\treturn Math.floor(this.drawPosition.y);\n\t}\n\n}","import { Piece } from \"./piece\";\nimport { FallingPiece } from \"./falling-piece\";\nimport { PIECE_MOVING_SPEED } from \"../constants\";\nimport { ColorUtils } from \"../util/color\";\n\nexport class GhostPiece extends Piece {\n\n\t/**\n\t * @param {FallingPiece} piece\n\t */\n\tconstructor(piece) {\n\t\tsuper();\n\n\t\tthis.owner = piece;\n\t\tthis.game = piece.game;\n\t\tthis.lastShapeLength = this.#getOwnerShapeDimensions();\n\n\t\tthis.drawPosition = {\n\t\t\tx: 0,\n\t\t\ty: piece.y,\n\t\t};\n\n\t\tthis.calculateColor();\n\t}\n\n\tcalculateColor() {\n\t\t// In order to not utilize the alpha blending (Issues with ctx.path)\n\t\t// Simulate the alpha blending with the current page background\n\t\t// on the board background -> rgba(0,0,0,0.35)\n\t\t// on the cell background -> rgba(0,0,0,0.15)\n\t\t// And finally apply 34% of this to the owner piece color\n\t\tlet blend = ColorUtils.blend(0.35, this.game.currentLevel.page.background, \"#000\");/* Board */\n\t\tblend = ColorUtils.blend(0.15, blend, \"#000\");/* Cell */\n\t\tthis.color = {/* Owner */\n\t\t\tbackground: ColorUtils.blend(1 - 0.34, this.owner.color.background, blend),\n\t\t\tborder: ColorUtils.blend(1 - 0.34, this.owner.color.border, blend)\n\t\t};\n\t}\n\n\tupdate(deltaTime) {\n\t\t// If the owner piece moved or rotated, check the ground collisions\n\t\tlet needToRecalculateCollisions = false;\n\t\tif (this.x !== this.owner.x || this.lastShapeLength != this.#getOwnerShapeDimensions()) {\n\t\t\tneedToRecalculateCollisions = true;\n\t\t\tthis.lastShapeLength = this.#getOwnerShapeDimensions();\n\t\t}\n\n\t\tthis.drawPosition.x = this.owner.x;\n\n\t\t// If the owner piece moved, check the ground collisions\n\t\tif (needToRecalculateCollisions) {\n\t\t\tthis.drawPosition.y = this.owner.y;\n\n\t\t\t// Increment the Y until the ghost piece reaches a non-empty cell or the grid bottom\n\t\t\twhile (this.y + this.height < this.game.board.rows && !this.game.board.checkShapeCollision(this, 1, 0)) {\n\t\t\t\tthis.drawPosition.y = Math.ceil(this.drawPosition.y + 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t#getOwnerShapeDimensions() {\n\t\treturn `${this.owner.shape.length}x${this.owner.shape[0].length}`;\n\t}\n\n\tget x() {\n\t\treturn Math.floor(this.drawPosition.x);\n\t}\n\n\tget y() {\n\t\treturn Math.ceil(this.drawPosition.y);\n\t}\n\n\tget shape() {\n\t\treturn this.owner.shape;\n\t}\n\n\tget width() {\n\t\treturn this.owner.width;\n\t}\n\n\tget height() {\n\t\treturn this.owner.height;\n\t}\n\n}\n","export class Level {\n\tstatic list = [];\n\n\t/**\n\t * @param {object} obj\n\t * @param {number} obj.speed The level speed multiplier\n\t * @param {object} obj.page The level page color definition\n\t * @param {string} obj.page.background\n\t * @param {string} obj.page.foreground\n\t * @param {object} obj.pieces The level pieces color definition\n\t * @param {string} obj.shape Specify which shape to draw in the board cells\n\t * @param {SVGAnimatedBoolean} obj.fillShape Specify whether to fill or stroke the shape\n\t * @param {Array<string>} obj.pieces.background\n\t * @param {Array<string>} obj.pieces.border\n\t */\n\tconstructor({ speed, pieces, page, shape, fillShape }) {\n\t\tthis.speed = speed;\n\t\tthis.page = page;\n\t\tthis.pieces = pieces;\n\t\tthis.shape = shape;\n\t\tthis.fillShape = fillShape;\n\t}\n\n\tapplyPageColors() {\n\t\tconst root = document.documentElement;\n\n\t\troot.style.setProperty(\"--background\", this.page.background);\n\t\troot.style.setProperty(\"--foreground\", this.page.foreground);\n\n\t\twindow.fillShape = this.fillShape;\n\t\twindow.drawShape = this.shape;\n\t}\n\n\t/**\n\t * @param {number} index\n\t *\n\t * @return {{ background: string, border: string }} The size of the grid\n\t */\n\tgetColorForPiece(index) {\n\t\treturn {\n\t\t\tbackground:\n\t\t\t\tthis.pieces.background[index % this.pieces.background.length],\n\t\t\tborder: this.pieces.border[index % this.pieces.border.length],\n\t\t};\n\t}\n}","import { CELL_PADDING, CELL_RADIUS } from \"../constants\";\n\n/**\n * @property {Array<Array<Number>>} shape\n * @property {Number} x\n * @property {Number} y\n */\nexport class Piece {\n\n\t/**\n\t * Renders the piece shape\n\t *\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {Number} cellSize\n\t */\n\trender(ctx, cellSize) {\n\t\t// Set the piece color\n\t\tctx.fillStyle = this.color.background;\n\t\tctx.strokeStyle = this.color.border;\n\t\tctx.lineWidth = 1.5;\n\n\t\tfor (let row = 0; row < this.shape.length; row++) {\n\t\t\tfor (let column = 0; column < this.shape[row].length; column++) {\n\t\t\t\t// Ignore empty spaces\n\t\t\t\tif (this.shape[row][column] === Piece.empty) continue;\n\n\t\t\t\t// Calculate cell position\n\t\t\t\tconst x = column * cellSize;\n\t\t\t\tconst y = row * cellSize;\n\n\t\t\t\t// Draws the cell\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.drawShape(\n\t\t\t\t\tthis.drawPosition.x * cellSize + x + CELL_PADDING,\n\t\t\t\t\tthis.drawPosition.y * cellSize + y + CELL_PADDING,\n\t\t\t\t\tcellSize - CELL_PADDING * 2,\n\t\t\t\t\tcellSize - CELL_PADDING * 2\n\t\t\t\t);\n\t\t\t\tctx.closePath();\n\t\t\t\tif (window.fillShape) ctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tstatic get empty() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * The amount of cells that aren't empty on the shape\n\t **/\n\tget cellCount() {\n\t\tlet count = 0;\n\n\t\tfor (let row = 0; row < this.shape.length; row++) {\n\t\t\tfor (let column = 0; column < this.shape[row].length; column++) {\n\t\t\t\t// Ignore empty spaces\n\t\t\t\tif (this.shape[row][column] === Piece.empty) continue;\n\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n}\n","import { TetrominoType } from \"../enum/tetromino-type\";\n\nexport class Tetromino {\n\n\tconstructor(shape, type) {\n\t\tthis.shape = shape;\n\t\tthis.type = type;\n\t}\n\n}\n\nexport const Tetrominoes = [\n\n\t// I\n\tnew Tetromino([\n\t\t[1, 1, 1, 1]\n\t], TetrominoType.I),\n\n\t// J\n\tnew Tetromino([\n\t\t[1, 0, 0],\n\t\t[1, 1, 1]\n\t], TetrominoType.J),\n\n\t// L\n\tnew Tetromino([\n\t\t[0, 0, 1],\n\t\t[1, 1, 1]\n\t], TetrominoType.L),\n\n\t// O\n\tnew Tetromino([\n\t\t[1, 1],\n\t\t[1, 1]\n\t], TetrominoType.O),\n\n\t// S\n\tnew Tetromino([\n\t\t[0, 1, 1],\n\t\t[1, 1, 0]\n\t], TetrominoType.S),\n\n\t// Z\n\tnew Tetromino([\n\t\t[1, 1, 0],\n\t\t[0, 1, 1]\n\t], TetrominoType.Z),\n\n\t// T\n\tnew Tetromino([\n\t\t[0, 1, 0],\n\t\t[1, 1, 1]\n\t], TetrominoType.T)\n\n];","import { LocaleUtils } from \"../util/locale\";\nimport { Particle } from \"./particle\";\n\nexport class ComboParticle extends Particle {\n\n\tconstructor({ x, y, multiplier, game }) {\n\t\tsuper();\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.text = `COMBO ${multiplier}x`;\n\t\tthis.#handleTextOverflow(game);\n\n\t\tthis.size = 1;\n\t}\n\n\t#handleTextOverflow(game) {\n\t\t// Measure the string width\n\t\tthis.#setFontStyle(game.ctx);\n\n\t\t// Measures the text\n\t\tconst measurement = game.ctx.measureText(this.text);\n\t\tconst width = measurement.width;\n\t\tconst height = measurement.actualBoundingBoxAscent + measurement.actualBoundingBoxDescent;\n\n\t\t// Clamps the particle position\n\t\tthis.x = Math.floor(Math.clamp(this.x, width / 4, game.canvas.width - width / 4));\n\t\tthis.y = Math.floor(Math.clamp(this.y, height / 2, game.canvas.height - height * 1.5));\n\t}\n\n\tupdate(deltaTime) {\n\t\tsuper.update(deltaTime);\n\n\t\t// Increase the size\n\t\tthis.size += deltaTime * 0.15 * 60;\n\t\t// Translates vertically\n\t\tthis.y -= deltaTime * 0.45 * 60;\n\t}\n\n\t#setFontStyle(ctx) {\n\t\tctx.fontFamily = `${parseInt(8 * this.size)}px Nintendoid1`;\n\t}\n\n\trender(ctx) {\n\t\t// Draws green text\n\t\tctx.fillStyle = `#fefefe${parseInt(this.alpha).toString(16)}`;\n\t\tthis.#setFontStyle(ctx);\n\t\tctx.fillTextCentered(LocaleUtils.get(\"combo\"), this.x, this.y);\n\t}\n\n\tget alpha() {\n\t\treturn (1 - Math.min(this.timeAlive, this.timeToLive) / this.timeToLive) * 255;\n\t}\n\n}","import { ParticleController } from \"../controller/particle-controller\";\nimport { Piece } from \"../model/piece\";\nimport { Particle } from \"./particle\";\n\nexport class ExplosionParticle extends Particle {\n\n\tconstructor({ x, y, color, angle }) {\n\t\tsuper();\n\t\tthis.timeToLive = Math.randomRange(0.083, 0.15);\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tthis.angle = angle;\n\t\tthis.speed = Math.random() * 270 + 120;\n\t\tthis.color = color;\n\t}\n\n\tupdate(deltaTime) {\n\t\tsuper.update(deltaTime);\n\n\t\tthis.x += Math.cos(this.angle) * deltaTime * this.speed;\n\t\tthis.y += Math.sin(this.angle) * deltaTime * this.speed;\n\t}\n\n\trender(ctx) {\n\t\tctx.fillStyle = this.color + this.alpha;\n\t\tctx.fillRect(this.x, this.y, window.devicePixelRatio * 2, window.devicePixelRatio * 2);\n\t}\n\n\tget alpha() {\n\t\treturn parseInt((1 - Math.min(this.timeAlive, this.timeToLive) / this.timeToLive) * 255)\n\t\t\t.toString(16)\n\t\t\t.padStart(2, \"0\");\n\t}\n\n\t/**\n\t * @param {ParticleController} particleController\n\t * @param {number} cellSize\n\t * @param {Piece} piece\n\t */\n\tstatic create(particleController, cellSize, piece) {\n\t\tconst position = {\n\t\t\tx: piece.x * cellSize,\n\t\t\ty: (piece.y + piece.height) * cellSize,\n\t\t};\n\n\t\tconst width = piece.width * cellSize;\n\n\t\tconst amount = Math.randomIntRange(20, 40);\n\n\t\tfor (let i = 0; i < amount; i++) {\n\t\t\tconst particle = new ExplosionParticle({\n\t\t\t\tx: position.x + (1 - i / amount) * width,\n\t\t\t\ty: position.y,\n\t\t\t\tcolor: piece.color.background,\n\t\t\t\tangle: (i / amount) * Math.PI,\n\t\t\t});\n\n\t\t\tparticleController.add(particle);\n\t\t}\n\t}\n\n}","export class Particle {\n\n\tconstructor() {\n\t\t// Define the time to live of the particle\n\t\tthis.isAlive = true;\n\t\tthis.timeAlive = 0;\n\t\tthis.timeToLive = Math.randomRange(0.29, 0.337);\n\t}\n\n\tupdate(deltaTime) {\n\t\t// If the time alive has exceeded the time to live, die\n\t\tif (this.timeAlive >= this.timeToLive) {\n\t\t\tthis.timeAlive = this.timeToLive;\n\t\t\tthis.isAlive = false;\n\t\t} else {\n\t\t\tthis.timeAlive += deltaTime;\n\t\t}\n\t}\n\n\trender(ctx) { }\n\n}","import { InputUtils } from \"../util/input\";\nimport { Main } from \"../main\";\nimport { AudioUtils } from \"../util/audio\";\nimport { SoundEffect } from \"../enum/sound-effect\";\nimport { CELL_RADIUS } from \"../constants\";\nimport { TextUtils } from \"../util/text\";\nimport { GameState } from \"./game-state\";\nimport { GameStateType } from \"./../enum/game-state-type\";\nimport { Setting } from \"../enum/setting\";\nimport { PreferenceUtils } from \"../util/preference\";\nimport { LocaleUtils } from \"../util/locale\";\nimport { ImageUtils } from \"../util/image\";\n\nconst TRANSITION_DURATION = 0.4;\n\nexport class GameStateMenu extends GameState {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.isTransitioning = false;\n\t\tthis.transitionTimer = 0;\n\t\tthis.progress = 1;\n\n\t\tthis.game = game;\n\t\tthis.isThemePlaying = false;\n\n\t\t/* ImageUtils.load(\"ic_cog.svg\")\n\t\t\t\t  .then(img => this.iconCog = img); */\n\t}\n\n\tupdate(deltaTime) {\n\t\t// Update transition to GameStatePlaying\n\t\tif (this.isTransitioning) {\n\t\t\tthis.transitionTimer += deltaTime;\n\n\t\t\tif (this.transitionTimer > TRANSITION_DURATION) {\n\t\t\t\tthis.transitionTimer = TRANSITION_DURATION;\n\t\t\t\t// Changes the game state\n\t\t\t\tthis.game.state = GameStateType.PLAYING;\n\t\t\t\tthis.game.statePlaying.reset();\n\t\t\t\tInputUtils.resetAllKeys();\n\t\t\t}\n\n\t\t\tthis.progress = Math.pow(1 - this.transitionTimer / TRANSITION_DURATION, 2.5);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Detect user input\n\t\tif (InputUtils.isAnyKeyDown()) {\n\t\t\t// Starts the theme song\n\t\t\tthis.#playGameStartSong();\n\n\t\t\tthis.isTransitioning = true;\n\t\t}\n\n\t\t// Update cog\n\n\t}\n\n\trender(ctx) {\n\t\t// Dims the canvas\n\t\tctx.fillStyle = `rgba(0, 0, 0, ${0.35 * this.progress})`;\n\t\t// ctx.fillRect(0, 0, this.game.canvas.width, this.game.canvas.height);\n\n\t\tctx.save();\n\t\tctx.translate((this.game.canvas.width / 2 - this.game.board.width / 2) * (this.progress), 0);\n\t\tctx.beginPath();\n\t\tctx.fillRoundRect(0, 0, this.game.board.width, this.game.board.height, [CELL_RADIUS]);\n\t\tthis.game.board.render(ctx);\n\n\t\t// Draw title\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"tetris\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 - 25,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 45 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\t\t// Draw subtitle\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"press_any_key_to_start\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 + 10,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 8 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\t\t// Draw cog\n\t\t/* ctx.translate(this.game.board.width, this.game.board.height)\n\t\tctx.scale(window.fontScale, window.fontScale);\n\t\tctx.drawImage(\n\t\t\tthis.iconCog,\n\t\t\t-this.iconCog.width * 1.5,\n\t\t\t-this.iconCog.height * 1.5\n\t\t); */\n\n\t\tctx.restore();\n\t}\n\n\tasync #playGameStartSong() {\n\t\tif (PreferenceUtils.getSetting(Setting.SOUND_EFFECTS_ENABLED)) {\n\t\t\tawait AudioUtils.play({\n\t\t\t\taudio: SoundEffect.START_GAME,\n\t\t\t\tvolume: 0.15,\n\t\t\t\tloop: false,\n\t\t\t\tcache: false,\n\t\t\t\tonStart: () => {\n\t\t\t\t\tthis.#rumbleStartSong();\n\t\t\t\t},\n\t\t\t\tonEnd: () => {\n\t\t\t\t\tthis.#startThemeSong();\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tawait this.#rumbleStartSong();\n\t\t\tawait this.#startThemeSong();\n\t\t}\n\t}\n\n\tasync #rumbleStartSong() {\n\t\t// 1000 - 16 beats\n\t\tconst beat = 1000 / 16;\n\t\tconst doubleBeat = beat * 2;\n\t\tconst quadrupleBeat = beat * 4;\n\t\tawait InputUtils.rumbleSequence([\n\t\t\t{ force: 1.0, duration: doubleBeat, delay: 0 },\n\t\t\t{ force: 0.5, duration: doubleBeat, delay: beat },\n\t\t\t{ force: 0.5, duration: doubleBeat, delay: 0 },\n\t\t\t{ force: 0.5, duration: doubleBeat, delay: 0 },\n\t\t\t{ force: 0.5, duration: doubleBeat, delay: 0 },\n\t\t\t{ force: 1.0, duration: doubleBeat, delay: beat },\n\t\t\t{\n\t\t\t\tforce: 1.0,\n\t\t\t\tduration: doubleBeat,\n\t\t\t\tdelay: quadrupleBeat,\n\t\t\t},\n\t\t\t{ force: 1.0, duration: doubleBeat, delay: beat },\n\t\t]);\n\t}\n\n\tasync #startThemeSong() {\n\t\tif (!PreferenceUtils.getSetting(Setting.MUSIC_ENABLED)) return;\n\t\tif (this.isThemePlaying) return;\n\n\t\tthis.isThemePlaying = true;\n\n\t\tAudioUtils.play({\n\t\t\taudio: SoundEffect.THEME,\n\t\t\tloop: true,\n\t\t\tvolume: 0.05\n\t\t});\n\t}\n\n}","import { CELL_RADIUS } from \"../constants\";\nimport { GameStateType } from \"../enum/game-state-type\";\nimport { InputUtils } from \"../util/input\";\nimport { LocaleUtils } from \"../util/locale\";\nimport { TextUtils } from \"../util/text\";\nimport { Main } from \"./../main\";\nimport { GameState } from \"./game-state\";\n\nexport class GameStateOver extends GameState {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.game = game;\n\t}\n\n\tupdate(deltaTime) {\n\t\tif (InputUtils.isAnyKeyDown()) {\n\t\t\tthis.game.reset();\n\t\t\tthis.game.statePlaying.reset();\n\t\t\tthis.game.state = GameStateType.PLAYING;\n\t\t}\n\t}\n\n\tpreRender(ctx) {\n\t\t// Blurs the canvas\n\t\tctx.save();\n\t\tctx.filter = \"blur(2px)\";\n\t}\n\n\trender(ctx) {\n\t\t// Draw the board\n\t\tthis.game.board.render(ctx);\n\n\t\t// Draw the panels\n\t\tfor (const panel of this.game.uiPanels) panel.render(ctx);\n\n\t\t// Draw the particles\n\t\tthis.game.particleController.render(ctx);\n\n\t\t// Dims the canvas\n\t\tctx.fillStyle = \"rgba(0, 0, 0, 0.35)\";\n\t\tctx.fillRect(0, 0, this.game.board.width, this.game.board.height);\n\n\t\t// Restore the canvas filters\n\t\tctx.restore();\n\n\t\t// Draw title\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"gameover\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 - 25,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 30.5 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\t\t// Draw subtitle\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"press_any_key_to_restart\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 + 10,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 8 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\t}\n\n}","import { GameStateType } from \"../enum/game-state-type\";\nimport { Main } from \"../main\";\nimport { InputUtils } from \"../util/input\";\nimport { LocaleUtils } from \"../util/locale\";\nimport { TextUtils } from \"../util/text\";\nimport { GameState } from \"./game-state\";\n\nexport class GameStatePause extends GameState {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.game = game;\n\t}\n\n\tupdate(deltaTime) {\n\t\tif (InputUtils.isAnyKeyDown()) {\n\t\t\tthis.game.state = GameStateType.PLAYING;\n\t\t\tInputUtils.resetAllKeys();\n\t\t}\n\t}\n\n\tpreRender(ctx) {\n\t\t// Blurs the canvas\n\t\tctx.save();\n\t\tctx.filter = \"blur(2px)\";\n\t}\n\n\trender(ctx) {\n\t\t// Draw the board\n\t\tthis.game.board.render(ctx);\n\n\t\t// Draw the falling and ghost piece\n\t\tthis.game.statePlaying.ghostPiece.render(ctx, this.game.board.cellSize);\n\t\tthis.game.statePlaying.fallingPiece.render(ctx, this.game.board.cellSize);\n\n\t\t// Draw the panels\n\t\tfor (const panel of this.game.uiPanels) panel.render(ctx);\n\n\t\t// Draw the particles\n\t\tthis.game.particleController.render(ctx);\n\n\t\t// Dims the canvas\n\t\tctx.fillStyle = \"rgba(0, 0, 0, 0.35)\";\n\t\tctx.fillRect(0, 0, this.game.board.width, this.game.board.height);\n\n\t\t// Restore the canvas filters\n\t\tctx.restore();\n\n\t\t// Draw title\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"paused\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 - 25,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 30.5 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\t\t// Draw subtitle\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"press_any_key_to_resume\"),\n\t\t\tx: this.game.board.width / 2,\n\t\t\ty: this.game.board.height / 2 + 10,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 8 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\t}\n\n}","import { GhostPiece } from \"../model/ghost-piece\";\nimport { FallingPiece } from \"../model/falling-piece\";\nimport { RandomBag } from \"../util/random-bag\";\nimport { GameState } from \"./game-state\";\nimport { AudioUtils } from \"../util/audio\";\nimport { SoundEffect } from \"../enum/sound-effect\";\nimport { ComboParticle } from \"../particle/combo-particle\";\nimport { Main } from \"../main\"\nimport { GameStateType } from \"../enum/game-state-type\";\nimport { Level } from \"../model/level\";\nimport { InputUtils } from \"../util/input\";\nimport { Key } from \"../enum/key\";\nimport { ExplosionParticle } from \"../particle/explosion-particle\";\nimport { Cell } from \"../model/cell\";\nimport { PreferenceUtils } from \"../util/preference\";\nimport { Setting } from \"../enum/setting\";\nimport { Tetrominoes } from \"../model/tetromino\";\n\nexport class GameStatePlaying extends GameState {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.game = game;\n\t\tthis.fallingPiece = null;\n\t\tthis.ghostPiece = null;\n\n\t\tthis.stats = {\n\t\t\tscore: 0,\n\t\t\tlinesCleared: 0,\n\t\t\tcomboCounter: 0,\n\t\t\tpiecesPlaced: 0,\n\t\t};\n\t}\n\n\treset() {\n\n\t\t// Reset the Random bag\n\t\tRandomBag.reset();\n\n\t\t// Gets the starting piece\n\t\tthis.#nextPiece();\n\n\t\t// Reset stats\n\t\tthis.stats = {\n\t\t\tscore: 0,\n\t\t\tlinesCleared: 0,\n\t\t\tcomboCounter: 0,\n\t\t\tpiecesPlaced: 0,\n\t\t};\n\n\t\tthis.#onLevel();\n\t}\n\n\t#nextPiece() {\n\t\t// Retrieve the next piece from the Random bag\n\t\tconst tetromino = RandomBag.pop();\n\t\tthis.fallingPiece = new FallingPiece(this.game, tetromino);\n\t\tthis.ghostPiece = new GhostPiece(this.fallingPiece);\n\t}\n\n\t#checkForTetris(position) {\n\t\t// Check if the new piece already touched any piece\n\t\tif (this.game.board.isAnyCellBellowShape(this.fallingPiece)) {\n\t\t\tthis.#onGameOver();\n\t\t} else {\n\t\t\t// Check if the user has made an tetris\n\t\t\tconst score = this.game.board.removeFilledRows();\n\t\t\tif (score > 0) {\n\t\t\t\t// If tetris in a row, spawn combo particle\n\t\t\t\tif (this.stats.comboCounter > 0) {\n\t\t\t\t\tthis.game.particleController.add(new ComboParticle({ x: position.x, y: position.y - 20, game: this.game }));\n\t\t\t\t}\n\n\t\t\t\t// Handle tetris\n\t\t\t\tthis.#onTetris(score);\n\t\t\t} else {\n\t\t\t\t// Reset the combo conter\n\t\t\t\tthis.stats.comboCounter = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t// #region Event handlers\n\t#onPlacePiece() {\n\t\t// Play sound effect\n\t\tif (PreferenceUtils.getSetting(Setting.SOUND_EFFECTS_ENABLED)) {\n\t\t\tAudioUtils.play({\n\t\t\t\taudio: SoundEffect.PLACE_BLOCK,\n\t\t\t\tpitch: Math.randomRange(0.75, 1.25),\n\t\t\t});\n\t\t}\n\n\t\t// Save current piece position\n\t\tconst position = {\n\t\t\tx: Math.max((this.fallingPiece.x + this.fallingPiece.width / 2) * this.game.board.cellSize, 0),\n\t\t\ty: this.fallingPiece.y * this.game.board.cellSize,\n\t\t};\n\n\t\t// If the user is pressing down while placing spawn explosion particles at the landing position\n\t\tif (PreferenceUtils.getSetting(Setting.FALL_PARTICLES_ENABLED)) {\n\t\t\tif (InputUtils.isKeyDown(Key.ARROW_DOWN) || InputUtils.isKeyDown(Key.SPACE)) {\n\t\t\t\tExplosionParticle.create(this.game.particleController, this.game.board.cellSize, this.fallingPiece);\n\t\t\t}\n\t\t}\n\n\t\t// Releases the down key\n\t\tInputUtils.resetAllKeys();\n\n\t\t// Place the piece\n\t\tthis.game.board.place(this.fallingPiece);\n\t\tthis.#nextPiece();\n\n\t\t// Increments the stats\n\t\tthis.stats.score += this.game.currentLevelIndex + 1;;\n\t\tthis.stats.piecesPlaced++;\n\n\t\t// Check for tetris, game over, or level up\n\t\tthis.#checkForTetris(position);\n\t}\n\n\t#onGameOver() {\n\t\t// Play sound effect\n\t\tAudioUtils.play({ audio: SoundEffect.GAME_OVER });\n\n\t\t// Set the game state\n\t\tthis.game.state = GameStateType.GAMEOVER;\n\n\t\t// Rumble gamepad\n\t\tInputUtils.rumbleSequence([\n\t\t\t{ force: 1.0, duration: 250, delay: 0 },\n\t\t\t{ force: 0.5, duration: 150, delay: 150 },\n\t\t]);\n\n\t\t// Reset the key presses, so any already pressed keys are not handled\n\t\tInputUtils.resetAllKeys();\n\t}\n\n\t#onLevel() {\n\t\t// Apply page colors\n\t\tthis.game.currentLevel.applyPageColors();\n\n\t\t// Grays out the previous placed cells\n\t\tthis.game.board.setColorForAllCells(\"#d0d0d0\", \"#aaa\");\n\t}\n\n\t#onTetris(lineClearedCount) {\n\t\t// Increment the lines removed counter\n\t\tthis.stats.linesCleared += lineClearedCount;\n\n\t\t// Check level\n\t\tif (this.stats.linesCleared % 10 == 0) {\n\t\t\t// Cycle through the levels\n\t\t\tthis.game.currentLevelIndex = Math.clamp(this.game.currentLevelIndex + 1, 0, Level.list.length - 1);\n\t\t\tthis.#onLevel();\n\n\t\t\t// Rumble gamepad\n\t\t\tInputUtils.rumble(1.0, 200);\n\t\t}\n\n\t\t// Increases the game score\n\t\tconst level = this.game.currentLevelIndex + 1;\n\t\tconst comboModifier = 100 * this.stats.comboCounter * level;\n\t\tconst newScore = Math.pow(lineClearedCount, 2) * 100 * level + comboModifier;\n\t\tthis.stats.score += newScore;\n\n\t\t// Increment the combo counter\n\t\tthis.stats.comboCounter++;\n\n\t\t// Play the tetris sound\n\t\t// Calculate the pitch shifting, the more lines removed higher the pitch\n\t\tif (PreferenceUtils.getSetting(Setting.SOUND_EFFECTS_ENABLED)) {\n\t\t\tconst pitch = 0.75 + 0.25 * Math.min(lineClearedCount / 3, 1);\n\t\t\tAudioUtils.play({\n\t\t\t\taudio: SoundEffect.SCORE,\n\t\t\t\tpitch: pitch\n\t\t\t});\n\t\t}\n\t}\n\n\t#onPaused() {\n\t\tthis.game.state = GameStateType.PAUSED;\n\t\tInputUtils.resetAllKeys();\n\t}\n\n\t#onPieceHold() {\n\t\tconst currentPiece = Tetrominoes.find(x => x.type == this.fallingPiece.type);\n\t\tconst nextPiece = RandomBag.pop();\n\n\t\t// Swap the falling piece's shape\n\t\tthis.fallingPiece.type = nextPiece.type;\n\t\tthis.fallingPiece.shape = nextPiece.shape;\n\n\t\t// Calculate the new color offsetting the new piece's color\n\t\tthis.ghostPiece.calculateColor();\n\t\tthis.ghostPiece.drawPosition.x = this.fallingPiece.x + 1; // Forces to recalculate the positioning of the ghost piece\n\n\t\t// Put the previous piece in to the end of the stack\n\t\tRandomBag.push(currentPiece);\n\t}\n\t// #endregion\n\n\tupdate(deltaTime) {\n\t\t// Check if the user has paused the game\n\t\tif (InputUtils.isKeyDown(Key.ESCAPE)) {\n\t\t\tthis.#onPaused();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Check for holding piece request\n\t\tif (InputUtils.isKeyDown(Key.CONTROL)) {\n\t\t\tthis.#onPieceHold();\n\t\t\tInputUtils.resetKey(Key.CONTROL);\n\t\t}\n\n\t\t// Update the falling piece\n\t\tthis.fallingPiece.update(deltaTime);\n\n\t\t// Checks if the current piece is about to collide\n\t\tif (this.game.board.isAnyCellBellowShape(this.fallingPiece) || this.fallingPiece.y + this.fallingPiece.height >= this.game.board.rows) {\n\t\t\tthis.#onPlacePiece();\n\t\t} else {\n\t\t\t// Updates the ghost piece\n\t\t\tthis.ghostPiece.update();\n\t\t}\n\n\t\t// Resets the keypress of the UP key\n\t\tInputUtils.resetKey(Key.ARROW_UP);\n\t\tInputUtils.resetKey(Key.ENTER);\n\n\t\t// Update the particles\n\t\tthis.game.particleController.update(deltaTime);\n\n\t\t// Update the panels\n\t\tfor (const panel of this.game.uiPanels) panel.update(deltaTime);\n\t}\n\n\trender(ctx) {\n\t\t// Draw the board\n\t\tthis.game.board.render(ctx);\n\n\t\t// Draw the panels\n\t\tfor (const panel of this.game.uiPanels) panel.render(ctx);\n\n\t\t// Draw the particles\n\t\tthis.game.particleController.render(ctx);\n\n\t\t// Draw the ghost and falling piece\n\t\tthis.ghostPiece.render(ctx, this.game.board.cellSize);\n\t\tthis.fallingPiece.render(ctx, this.game.board.cellSize);\n\t}\n\n}","export class GameState {\n\n\tupdate(deltaTime) { }\n\n\tpreRender(ctx) { }\n\n\trender(ctx) { }\n\n}","import { CELL_RADIUS, EMPTY_CELL_BORDER, UI_PANEL_BACKGROUND } from \"../constants\";\nimport { Main } from \"../main\";\nimport { Piece } from \"../model/piece\";\nimport { LocaleUtils } from \"../util/locale\";\nimport { RandomBag } from \"../util/random-bag\";\nimport { TextUtils } from \"../util/text\";\nimport { DensityCanvas } from \"../widget/density-canvas\";\nimport { UIPanel } from \"./ui-panel\";\n\nexport class UIBag extends UIPanel {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.lastPiece = null;\n\t\tthis.buffer = new DensityCanvas();\n\n\t\tthis.game = game;\n\t}\n\n\tcalculateSize({ width, height }) {\n\t\tthis.position = {\n\t\t\tx: width + this.padding,\n\t\t\ty: this.game.board.cellSize * 5 + this.padding,\n\t\t};\n\n\t\tthis.size = {\n\t\t\twidth: this.game.board.cellSize * 4,\n\t\t\theight: this.game.board.cellSize * 4,\n\t\t};\n\n\t\t// Resize the buffer\n\t\tthis.buffer.setSize({\n\t\t\twidth: this.size.width,\n\t\t\theight: this.size.height - 70,\n\t\t});\n\t}\n\n\tupdate(deltaTime) {\n\t\tconst nextPiece = RandomBag.peek();\n\t\tif (this.lastPiece != nextPiece) {\n\t\t\t// Get the buffer context\n\t\t\tconst ctx = this.buffer.context;\n\t\t\t// Calculate the cell size, scaled\n\t\t\tconst cellSize = this.game.board.cellSize * 0.75;\n\n\t\t\t// Clear the previous drawn piece\n\t\t\tthis.buffer.clear();\n\n\t\t\t// Create a fake piece to render\n\t\t\tconst piece = new Piece();\n\t\t\tpiece.shape = nextPiece.shape;\n\t\t\tpiece.height = piece.shape.length;\n\t\t\tpiece.width = piece.shape[0].length;\n\t\t\tpiece.drawPosition = {\n\t\t\t\tx: (this.size.width / 2 - (piece.width * cellSize) / 2) / cellSize,\n\t\t\t\ty: ((this.buffer.height) / 2 - (piece.height * cellSize) / 2) / cellSize\n\t\t\t};\n\t\t\tpiece.color = this.game.currentLevel.getColorForPiece(nextPiece.type);\n\n\t\t\t// Render the fake piece to the buffer\n\t\t\tpiece.render(ctx, cellSize);\n\t\t}\n\t}\n\n\trender(ctx) {\n\t\tctx.fillStyle = UI_PANEL_BACKGROUND;\n\t\tctx.strokeStyle = EMPTY_CELL_BORDER;\n\t\tctx.lineWidth = 1;\n\n\t\tctx.save();\n\t\tctx.translate(this.position.x, this.position.y);\n\n\t\tctx.beginPath();\n\t\tctx.roundRect(0, 0, this.size.width, this.size.height, [CELL_RADIUS]);\n\t\tctx.fill();\n\t\tctx.stroke();\n\n\t\t// Draw title\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"next\"),\n\t\t\tx: this.size.width / 2,\n\t\t\ty: 40,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 15.5 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\n\t\tthis.buffer.drawBufferTo(0, this.bufferPadding, ctx);\n\n\n\t\tctx.restore();\n\t}\n\n\tget bufferPadding() {\n\t\treturn 120;\n\t}\n\n\tget padding() {\n\t\treturn 20;\n\t}\n\n}","export class UIPanel {\n\n\tcalculateSize({ width, height }) {\n\n\t}\n\n\tupdate(deltaTime) {\n\n\t}\n\n\trender(ctx) {\n\n\t}\n\n}","import { CELL_RADIUS, EMPTY_CELL_BACKGROUND, EMPTY_CELL_BORDER, UI_PANEL_BACKGROUND } from \"../constants\";\nimport { Main } from \"../main\";\nimport { LocaleUtils } from \"../util/locale\";\nimport { TextUtils } from \"../util/text\";\nimport { UIPanel } from \"./ui-panel\";\n\nexport class UIStats extends UIPanel {\n\n\t/**\n\t * @param {Main} game\n\t */\n\tconstructor(game) {\n\t\tsuper();\n\n\t\tthis.game = game;\n\t}\n\n\tcalculateSize({ width, height }) {\n\t\tthis.position = {\n\t\t\tx: width + this.padding,\n\t\t\ty: 0,\n\t\t};\n\n\t\tthis.size = {\n\t\t\twidth: this.game.board.cellSize * 4,\n\t\t\theight: this.game.board.cellSize * 5,\n\t\t};\n\t}\n\n\tupdate(deltaTime) {}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t// eslint-disable-next-line max-statements\n\trender(ctx) {\n\t\tctx.fillStyle = UI_PANEL_BACKGROUND;\n\t\tctx.strokeStyle = EMPTY_CELL_BORDER;\n\t\tctx.lineWidth = 1;\n\n\t\tctx.save();\n\t\tctx.translate(this.position.x, this.position.y);\n\n\t\tctx.beginPath();\n\t\tctx.roundRect(0, 0, this.size.width, this.size.height, [CELL_RADIUS]);\n\t\tctx.fill();\n\t\tctx.stroke();\n\n\t\t// Draw title\n\t\tTextUtils.drawCRT({\n\t\t\tctx,\n\t\t\ttext: LocaleUtils.get(\"tetris\"),\n\t\t\tx: this.size.width / 2,\n\t\t\ty: 40 * window.fontScale,\n\t\t\tfontFamily: \"Nintendoid1\",\n\t\t\tfontSize: 15.5 * window.fontScale,\n\t\t\tcolor: \"#fefefe\",\n\t\t});\n\n\t\tctx.fillStyle = \"#fefefe\";\n\t\tctx.font = `${8 * window.fontScale}pt Nintendoid1`;\n\n\t\tctx.fillText(\n\t\t\tLocaleUtils.get(\"score\"),\n\t\t\t12.5 * window.fontScale,\n\t\t\t70 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\t\tctx.fillText(\n\t\t\tthis.game.statePlaying.stats.score,\n\t\t\t12.5 * window.fontScale,\n\t\t\t90 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\n\t\tctx.fillText(\n\t\t\tLocaleUtils.get(\"lines\"),\n\t\t\t12.5 * window.fontScale,\n\t\t\t115 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\t\tctx.fillText(\n\t\t\tthis.game.statePlaying.stats.linesCleared,\n\t\t\t12.5 * window.fontScale,\n\t\t\t135 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\n\t\tctx.fillText(\n\t\t\tLocaleUtils.get(\"pieces\"),\n\t\t\t12.5 * window.fontScale,\n\t\t\t160 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\t\tctx.fillText(\n\t\t\tthis.game.statePlaying.stats.piecesPlaced,\n\t\t\t12.5 * window.fontScale,\n\t\t\t180 * window.fontScale,\n\t\t\tthis.size.width\n\t\t);\n\n\t\tctx.restore();\n\t}\n\n\tget padding() {\n\t\treturn 20;\n\t}\n\n}\n","import { SoundEffect } from \"../enum/sound-effect\";\n\nexport class AudioUtils {\n\n\tstatic #cache = {};\n\n\t/**\n\t * Resolves and expands an sound effect to absolute path\n\t *\n\t * @param {SoundEffect} soundFX\n\t * @return {string} The resolved path of the audio file\n\t */\n\tstatic #resolveAudioPath(soundFX) {\n\t\tconst locationRoot = window.location.href.indexOf(\"http://localhost:\") ? window.location.href : window.location.pathname.substring(0,window.location.pathname.lastIndexOf(\"/\"));\n\t\tconst relativePath = \"/assets/audio/\";\n\n\t\treturn locationRoot + relativePath + soundFX;\n\t}\n\n\t/** @return {AudioContext} */\n\tstatic #createAudioContext() {\n\t\tif (window.AudioContext) return new window.AudioContext();\n\t\telse return new window.webkitAudioContext();// eslint-disable-line new-cap\n\t}\n\n\t/**\n\t * @param {AudioContext} context\n\t *\n\t * @return {GainNode}\n\t **/\n\tstatic #createGainNode(context) {\n\t\tif (\"createGain\" in context) return context.createGain();\n\t\telse return context.createGainNode();\n\t}\n\n\t/**\n\t * Loads an audio file from the given path\n\t * The audio is cached for future use\n\t *\n\t * The {@link path} should be resolved and expanded by {@link #resolveAudioPath}\n\t *\n\t * @param {string} path The resolved path of the audio file to be loaded\n\t * @param {boolean} cache Whether the audio should be cached for future use\n\t * @return {Promise<ArrayBuffer>} The audio data\n\t */\n\tstatic async #loadAudio(path, cache=true) {\n\t\t// Fetch the audio data from cache\n\t\t// if (this.#cache.hasOwnProperty(path)) return this.#cache[path].slice(0);\n\n\t\t// Request the audio file\n\t\tconst response = await fetch(path);\n\t\tconst data = await response.arrayBuffer();\n\n\t\t// Cache it\n\t\t// if (data && cache) this.#cache[path] = data;\n\n\t\t// Return it\n\t\treturn data;\n\t}\n\n\t/**\n\t * Plays a given sound effect\n\t *\n\t * @param {Object} obj Rest parameter object\n\t * @param {SoundEffect} obj.audio - The audio to play\n\t * @param {Number} obj.pitch - The amount of pitch shifting to be applied, ranging from 0.0 to 1.0\n\t * @param {Number} obj.volume - The amount of gain to play the audio, ranging from 0.0 to 1.0\n\t * @param {Boolean} obj.loop - Determines if the audio will be played in a loop\n\t * @param {Boolean} obj.cache - Determines if the audio data should be cached, useful for constantly used sound fx\n\t * @param {Function} obj.onStart - Callback, called when start playing\n\t * @param {Function} obj.onEnd - Callback, called when end playing\n\t */\n\tstatic async play({ audio, pitch=1, volume=1, loop=false, cache=true, onStart=null, onEnd=null }) {\n\t\t// Create audio context, source and node gain\n\t\tconst context = this.#createAudioContext();\n\t\tconst source = context.createBufferSource();\n\t\tconst gain = this.#createGainNode(context);\n\t\tgain.connect(context.destination);\n\n\t\t// Fetch the audio data\n\t\tconst path = this.#resolveAudioPath(audio);\n\t\tconst audioData = await this.#loadAudio(path, cache);\n\n\t\t// Decode the audio\n\t\tsource.buffer = await context.decodeAudioData(audioData);\n\n\t\t// Set the pitch\n\t\tsource.playbackRate.value = pitch;\n\n\t\t// Set the volume\n\t\tsource.connect(gain);\n\t\tgain.gain.value = volume;\n\n\t\t// Set the loop\n\t\tsource.loop = loop;\n\n\t\t// Play the audio\n\t\tsource.play = source.start;\n\t\tsource.play();\n\n\t\t// Attach callbacks\n\t\tif (onStart) setTimeout(onStart, 0);\n\t\tif (onEnd) source.addEventListener(\"ended\", onEnd.bind(this));\n\t}\n\n}","\nconst getHexChannel = (hex, index) => {\n\tif (hex.length <= 5) {\n\t\tconst channel = hex.substr(1 + index, 1);\n\n\t\treturn `${channel}${channel}`;\n\t}\n\n\treturn hex.substr(1 + index * 2, 2);\n};\n\nfunction hexToRGB(hex) {\n\tif (typeof hex === \"string\" && hex.startsWith(\"rgb\")) {\n\t\tconsole.log(`${hex} is rgb`);\n\t\tconst l = hex.substring(hex.indexOf(\"(\") + 1, hex.length - 1);\n\n\t\treturn l.split(\",\").map((x) => parseFloat(x));\n\t}\n\n\tif (typeof hex === \"string\" && hex[0] === \"#\") {\n\t\tconsole.log(`${hex} is hex`);\n\t\treturn [0, 1, 2].map((i) => parseInt(getHexChannel(hex, i), 16));\n\t}\n\n\treturn hex;\n}\n\nfunction channelMixer(channelA, channelB, amount) {\n\tconsole.log(arguments)\n\tconst a = channelA * (1 - amount);\n\tconst b = channelB * amount;\n\tconsole.log(a, b);\n\n\treturn parseInt(a + b, 10);\n}\n\nfunction blendColors(colorA, colorB, amount = 0.5) {\n\tconsole.log(arguments);\n\tconst rgbA = hexToRGB(colorA);\n\tconst rgbB = hexToRGB(colorB);\n\n\tconst output = [0, 1, 2].map((i) => channelMixer(rgbA[i], rgbB[i], amount));\n\n\treturn `rgb(${output[0]},${output[1]},${output[2]})`;\n}\n\nconst lighten = (color, amount) => blendColors(color, \"#fff\", amount);\nconst darken = (color, amount) => blendColors(color, \"#000\", amount);\n\n/**\n * Color utility class\n *\n * Thanks to this stackoverflow answer\n * @link https://stackoverflow.com/a/37600815\n */\nexport class ColorUtils {\n\n\tstatic #getHexChannel(hex, index) {\n\t\tif (hex.length <= 5) {\n\t\t\tconst channel = hex.substr(1 + index, 1);\n\n\t\t\treturn `${channel}${channel}`;\n\t\t}\n\n\t\treturn hex.substr(1 + index * 2, 2);\n\t}\n\n\tstatic #parseColorValues(color) {\n\t\tif (typeof color === \"string\" && color.startsWith(\"rgb\"))\n\t\t\treturn color.substring(color.indexOf(\"(\") + 1, color.length - 1)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(parseFloat);\n\n\t\tif (typeof color === \"string\" && color[0] === \"#\")\n\t\t\treturn [0, 1, 2].map(index => parseInt(this.#getHexChannel(color, index), 16));\n\n\t\treturn color;\n\t}\n\n\tstatic #channelMixer(channelA, channelB, amount) {\n\t\tconst a = channelA * (1 - amount);\n\t\tconst b = channelB * amount;\n\n\t\treturn parseInt(a + b, 10);\n\t}\n\n\t/**\n\t * Blends two colors\n\t *\n\t * Thanks to PimpTrizkit\n\t * @link https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)\n\t *\n\t * @param {number} percentage Blending percentage [0.0 - 1.0]\n\t * @param {string} colorA Color 1\n\t * @param {string} colorB Color 2\n\t * @return {string} The blended color\n\t */\n\tstatic blend(percentage, colorA, colorB) {\n\t\tconst rgbA = this.#parseColorValues(colorA);\n\t\tconst rgbB = this.#parseColorValues(colorB);\n\t\tconst output = [0, 1, 2].map((i) => this.#channelMixer(rgbA[i], rgbB[i], percentage));\n\n\t\treturn `rgb(${output[0]},${output[1]},${output[2]})`;\n\t}\n\n}\n\n\nwindow.ColorUtils = ColorUtils;\n\n\nwindow.ColorUtils = ColorUtils;","export class ImageUtils {\n\n\tstatic #cache = { };\n\n\tstatic load(filename) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.#cache.hasOwnProperty(filename)) {\n\t\t\t\treturn resolve(this.#cache[filename]);\n\t\t\t}\n\n\t\t\tconst image = new Image();\n\n\t\t\timage.onload = () => {\n\t\t\t\tthis.#cache[filename] = image;\n\t\t\t\tresolve(image);\n\t\t\t};\n\n\t\t\timage.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\timage.src = `assets/images/${filename}`;\n\t\t});\n\t}\n\n}","import { ONESHOT_BUTTON_TRIGGER_THRESHOLD } from \"../constants\";\nimport { GameStateType } from \"../enum/game-state-type\";\nimport { GamepadKey, GamepadKeyToKeyboardKey } from \"../enum/gamepad-key\";\nimport { Key } from \"../enum/key\";\n\nexport class InputUtils {\n\n\t/** @type {Gamepad} */\n\tstatic #connectedGamepadId = null;\n\n\tstatic #consumedKeyCodes = Object.values(Key);\n\n\tstatic #pressedKeys = [];\n\n\tstatic #eventBuffer = [];\n\n\tstatic #oneShotEventBuffer = [];\n\n\tstatic attachListeners() {\n\t\t// Attach the key event listeners\n\t\twindow.addEventListener(\"keyup\", this.#onKey.bind(this));\n\t\twindow.addEventListener(\"keydown\", this.#onKey.bind(this));\n\t\twindow.addEventListener(\"gamepadconnected\", this.#onGamepadConnected.bind(this));\n\t\twindow.addEventListener(\"gamepaddisconnected\", this.#onGamepadDisconnected.bind(this));\n\t}\n\n\t/**\n\t * @param {GamepadEvent} event\n\t */\n\tstatic #onGamepadConnected(event) {\n\t\tconsole.log(`Gamepad connected with id ${event.gamepad.index}`);\n\t\tif (this.#connectedGamepadId) {\n\t\t\tconsole.log(\"Ignoring due to already connected gamepad!\");\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#connectedGamepadId = event.gamepad.id;\n\t}\n\n\t/**\n\t * @param {GamepadEvent} event\n\t */\n\tstatic #onGamepadDisconnected(event) {\n\t\tconsole.log(`Gamepad disconnected with id ${event.gamepad.index}`);\n\n\t\tif (this.#connectedGamepadId === event.gamepad.id) {\n\t\t\t// The connected gamepad has been disconnected\n\t\t\tconsole.log(\"Current connected gamepad has been disconnected!\");\n\t\t\tthis.#connectedGamepadId = null;\n\n\t\t\t// Pause the game\n\t\t\twindow.main.state = GameStateType.PAUSED;\n\t\t\t// TODO: Show snackbar or toast to inform it\n\t\t}\n\t}\n\n\tstatic update() {\n\t\tthis.#oneShotEventBuffer.clear();\n\t\tthis.#pollGamepad();\n\t}\n\n\tstatic #pollGamepad() {\n\t\t// Ignore if no Gamepad is connected\n\t\tif (!this.#connectedGamepadId) return;\n\n\t\t// Search for the connected Gamepad\n\t\tconst gamepad = navigator.getGamepads().find((x) => x && x.id == this.#connectedGamepadId);\n\t\tif (!gamepad) return;\n\n\t\t// Detect button pressing/releasing\n\t\tfor (const button in GamepadKey) {\n\t\t\tif (!GamepadKey.hasOwnProperty(button)) continue;\n\n\t\t\tconst buttonIndex = GamepadKey[button];\n\n\t\t\t// Check if the gamepad button is currently pressed\n\t\t\tconst isPressed = gamepad.buttons[buttonIndex].pressed;\n\t\t\t// Get it's keyboard emulation\n\t\t\tconst keyboardEquivalent = GamepadKeyToKeyboardKey[buttonIndex];\n\n\t\t\tthis.#onKeyInternal(keyboardEquivalent, isPressed);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line complexity\n\tstatic async rumble(force=1, duration=50) {\n\t\t// Ignore if no Gamepad is connected\n\t\tif (!this.#connectedGamepadId) return;\n\n\t\t// Search for the connected Gamepad\n\t\tconst gamepad = navigator.getGamepads().find(x => x && x.id == this.#connectedGamepadId);\n\t\tif (!gamepad) return;\n\n\t\t// Get available actuators\n\t\tlet actuators = [];\n\t\tif (gamepad.vibrationActuator) actuators = [gamepad.vibrationActuator];\n\t\telse if (gamepad.hapticActuators) actuators = gamepad.hapticActuators.filter(x => x);\n\n\t\t// For each available actuator, pulse or play effect\n\t\tfor (const actuator of actuators) {\n\t\t\tif (actuator.pulse) {\n\t\t\t\tawait actuator.pulse(force, duration);\n\t\t\t} else if (actuator.playEffect) {\n\t\t\t\tawait actuator.playEffect(\n\t\t\t\t\tactuator.type || \"dual-rumble\",\n\t\t\t\t\t{\n\t\t\t\t\t\tstartDelay: 0,\n\t\t\t\t\t\tduration: duration,\n\t\t\t\t\t\tweakMagnitude: force / 2,\n\t\t\t\t\t\tstrongMagnitude: force,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param  {Array<{ force: number, duration: number, delay: number }>} states\n\t */\n\tstatic async rumbleSequence(states) {\n\t\t// Ignore if no Gamepad is connected\n\t\tif (!this.#connectedGamepadId) return;\n\n\t\tconst delay = function (amount) {\n\t\t\treturn new Promise((resolve, _) => {\n\t\t\t\tsetTimeout(resolve, amount);\n\t\t\t});\n\t\t};\n\n\t\tfor (const s of states) {\n\t\t\tawait delay(s.delay);\n\t\t\tthis.rumble(s.force, s.duration);\n\t\t\tawait delay(s.duration);\n\t\t}\n\t}\n\n\tstatic #onKey(event) {\n\t\tthis.#onKeyInternal(event.code, event.type === \"keydown\");\n\t}\n\n\t// eslint-disable-next-line max-statements\n\tstatic #onKeyInternal(key, isPressed) {\n\t\t// Verify if the event of this key is buffered\n\t\t// This is important to only handle an event once\n\t\t// Ignoring duplicates, which would be a problem in Menu or GameOver screens\n\t\t// If the user kept a key pressed the screen would simply skip itself\n\t\tconst cached = this.#eventBuffer.find((x) => x.key === key);\n\t\tif (cached) {\n\t\t\t// If the buffered event is the same type of the new event, ignore it\n\t\t\tif (cached.isPressed === isPressed) return;\n\n\t\t\t// Change the buffered event type and continue\n\t\t\tcached.isPressed = isPressed;\n\n\t\t\tif (cached.isPressed) {\n\t\t\t\tcached.start = performance.now();\n\t\t\t\tdelete cached.end;\n\t\t\t} else {\n\t\t\t\tcached.end = performance.now();\n\n\t\t\t\t// Check for one shot button trigger\n\t\t\t\tconst timePressed = cached.end - cached.start;\n\t\t\t\tif (timePressed <= ONESHOT_BUTTON_TRIGGER_THRESHOLD) this.#oneShotEventBuffer.push(key);\n\t\t\t}\n\t\t} else {\n\t\t\t// The event wasn't buffered before, add it to the event buffer\n\t\t\tthis.#eventBuffer.push({ key, isPressed, start: performance.now() });\n\t\t}\n\n\t\t// Ignore undefined keys\n\t\tconst keyCodeIndex = this.#consumedKeyCodes.indexOf(key);\n\t\tif (keyCodeIndex === -1) return;\n\n\t\tconst pressedKeysIndex = this.#pressedKeys.indexOf(key);\n\n\t\tif (!isPressed) {// Handles key up events\n\t\t\t// If on the pressed keys list, remove it\n\t\t\tif (pressedKeysIndex !== -1) this.#pressedKeys.splice(pressedKeysIndex, 1);\n\t\t} else if (pressedKeysIndex === -1) {// Handles key down event\n\t\t\tthis.#pressedKeys.push(key);\n\t\t}\n\t}\n\n\tstatic isKeyDown(key) {\n\t\treturn this.#pressedKeys.indexOf(key) !== -1;\n\t}\n\n\t/**\n\t * Checks wether a key press was in range of 50ms, meaning a really fast button trigger\n\t *\n\t * @param {Key} key The key to check\n\t * @return {boolean} True when the key was oneshot triggered\n\t */\n\tstatic isKeyDownOneshot(key) {\n\t\treturn this.#oneShotEventBuffer.includes(key);\n\t}\n\n\tstatic isAnyKeyDown() {\n\t\treturn this.#pressedKeys.length > 0;\n\t}\n\n\tstatic resetKey(key) {\n\t\tconst index = this.#pressedKeys.indexOf(key);\n\t\tif (index !== -1) this.#pressedKeys.splice(index, 1);\n\t}\n\n\tstatic resetAllKeys() {\n\t\tthis.#oneShotEventBuffer = [];\n\t\tthis.#pressedKeys = [];\n\t}\n\n}\n\nInputUtils.attachListeners();","export class LocaleUtils {\n\n\tstatic #locale = \"en\";\n\n\tstatic #localeData = null;\n\n\tstatic async #fetchLocale() {\n\t\t// Define the supported languages\n\t\tconst supportedLanguages = [\"en\", \"pt\"];\n\t\t// Fetch the browser's known languages\n\t\tconst userKnownLanguages = navigator.languages.map(x =>\n\t\t\t// Split the - country code, getting only the language\n\t\t\tx.split(\"-\")\n\t\t\t .find(x => x)\n\t\t);\n\n\t\t// Get a common ground, the first language that is both supported and the browser knows\n\t\tconst commonGround = userKnownLanguages.find(x => supportedLanguages.includes(x));\n\n\t\t// Either  common ground or the first supported language\n\t\tthis.#locale = commonGround || supportedLanguages.find(x => x);\n\t}\n\n\tstatic async #loadLocaleData() {\n\t\t// Request the .json file\n\t\tconst request = await fetch(`assets/locale/${this.#locale}.json`);\n\t\t// Parse it\n\t\tconst response = await request.json();\n\t\t// Store it\n\t\tthis.#localeData = response;\n\t}\n\n\tstatic async initialize() {\n\t\tawait this.#fetchLocale();\n\t\tawait this.#loadLocaleData();\n\t}\n\n\t/**\n\t * Given a key, returns a localized string\n\t *\n\t * @param {string} key The entry on the .json files to fetch\n\t * @return {string} The localized entry\n\t */\n\tstatic get(key) {\n\t\tif (!this.#localeData.hasOwnProperty(key)) {\n\t\t\tconsole.error(`Could not load entry ${key} at ${this.#locale}.json!`);\n\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn this.#localeData[key];\n\t}\n\n}\n","export class MouseUtils {\n\n\tstatic position = { x: 0, y: 0 };\n\n\tstatic isPressed = false;\n\n\tstatic attachHooks(element) {\n\t\telement.addEventListener(\"mousedown\", this.#onMouseDown.bind(this));\n\t\telement.addEventListener(\"mouseup\", this.#onMouseUp.bind(this));\n\t\telement.addEventListener(\"mousemove\", this.#onMouseMove.bind(this));\n\t}\n\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tstatic #onMouseDown(event) {\n\t\tthis.position.x = event.clientX;\n\t\tthis.position.y = event.clientY;\n\t\tthis.isPressed = true;\n\t}\n\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tstatic #onMouseUp(event) {\n\t\tthis.position.x = event.clientX;\n\t\tthis.position.y = event.clientY;\n\t\tthis.isPressed = false;\n\t}\n\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tstatic #onMouseMove(event) {\n\t\tthis.position.x = event.clientX;\n\t\tthis.position.y = event.clientY;\n\t}\n\n}","import { Setting } from \"./../enum/setting\";\n\nexport class PreferenceUtils {\n\n\t/**\n\t * Retrieves the value from the stored settings\n\t *\n\t * @param {Setting} setting\n\t * @return {boolean} True when enabled\n\t */\n\tstatic getSetting(setting) {\n\t\tconst obj = this.get(setting, true, true);\n\n\t\treturn obj === true;\n\t}\n\n\t/**\n\t * Stores the value on the settings\n\t *\n\t * @param {Setting} setting\n\t * @param {boolean} enabled Wether the given setting should be enabled\n\t */\n\tstatic setSetting(setting, enabled) {\n\t\tconst obj = enabled;\n\t\tthis.set(setting, obj);\n\t}\n\n\tstatic get(key, defaultValue = null, parse = true) {\n\t\tlet raw = localStorage.getItem(key);\n\t\tif (!raw) raw = defaultValue;\n\t\tif (parse) raw = JSON.parse(raw);\n\n\t\treturn raw;\n\t}\n\n\tstatic set(key, value, stringify = true) {\n\t\tlet raw = value;\n\t\tif (stringify) raw = JSON.stringify(raw);\n\n\t\treturn localStorage.setItem(key, raw);\n\t}\n\n}\n","import { Tetrominoes, Tetromino } from \"../model/tetromino\";\n\nexport class RandomBag {\n\n\t/** @type {Tetromino[]} */\n\tstatic #bag = [];\n\n\tstatic push(tetromino) {\n\t\tthis.#bag.push(tetromino);\n\t}\n\n\tstatic peek() {\n\t\t// Automatically resets the bag whenever it is empty\n\t\tif (this.#bag.length <= 0) this.reset();\n\n\t\t// Returns the last of the stack, without removing it\n\t\treturn this.#bag[this.#bag.length - 1];\n\t}\n\n\tstatic pop() {\n\t\t// Automatically resets the bag whenever it is empty\n\t\tif (this.#bag.length <= 0) this.reset();\n\n\t\t// Remove the last of the stack\n\t\treturn this.#bag.pop();\n\t}\n\n\tstatic reset() {\n\t\tthis.#bag = Tetrominoes.slice(0).shuffle();\n\t}\n\n}","// Define constants\nconst green = \"#ea36afF0\";\nconst magenta = \"#75fa69F0\";\nconst maxOffset = 2;\n\nexport class TextUtils {\n\n\tstatic #offsetX = 0;\n\t\n\tstatic #offsetY = 0;\n\n\t/**\n\t * Draws text simulating an CRT display\n\t *\n\t * @param {Object} obj\n\t * @param {CanvasRenderingContext2D} obj.ctx\n\t * @param {string} obj.text\n\t * @param {Number} obj.x\n\t * @param {Number} obj.y\n\t * @param {string} obj.color\n\t * @param {string} obj.fontFamily\n\t * @param {Number} obj.fontSize\n\t */\n\t// eslint-disable-next-line max-statements\n\tstatic drawCRT({ ctx, text, x, y, color=\"#fff\", fontFamily=null, fontSize=12, centered=true }) {\n\t\tconst offset = () => Math.random() - 0.5;\n\n\t\tctx.font = `${fontSize}pt ${fontFamily}`;\n\n\t\tthis.#offsetX = Math.clamp(this.#offsetX + offset(), -maxOffset, maxOffset);\n\t\tthis.#offsetY = Math.clamp(this.#offsetY + offset(), -maxOffset, maxOffset);\n\n\t\t// Set the canvas to be blurred\n\t\tctx.save();\n\t\tif (Math.random() <= 0.5) ctx.filter = \"blur(3px)\";\n\n\t\t// Draws green text\n\t\tctx.fillStyle = green;\n\t\tif (centered) {\n\t\t\tctx.fillTextCentered(text, x + this.#offsetX, y + this.#offsetY);\n\t\t} else {\n\t\t\tctx.fillText(text, x + this.#offsetX, y + this.#offsetY);\n\t\t}\n\n\t\t// Draws magenta text\n\t\tctx.fillStyle = magenta;\n\t\tif (centered) {\n\t\t\tctx.fillTextCentered(text, x + this.#offsetX * -1, y + this.#offsetY * -1);\n\t\t} else {\n\t\t\tctx.fillText(text, x + this.#offsetX * -1, y + this.#offsetY * -1);\n\t\t}\n\n\t\t// Restore canvas filter\n\t\tctx.restore();\n\n\t\t// Draws the main text\n\t\tctx.fillStyle = color;\n\t\tif (centered) {\n\t\t\tctx.fillTextCentered(text, x, y);\n\t\t} else {\n\t\t\tctx.fillText(text, x, y);\n\t\t}\n\t}\n\n}","export class DensityCanvas {\n\n\tconstructor() {\n\t\tthis.canvas = document.createElement(\"canvas\");\n\t\tthis.context = this.canvas.getContext(\"2d\");\n\t\tthis.virtualWidth = null;\n\t\tthis.virtualHeight = null;\n\t\tthis.enableHighDPI = true;\n\t}\n\n\t#getBackingStoreRatio(context) {\n\t\tif (!this.enableHighDPI) return 1;\n\n\t\treturn context.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio ||\n\t\t\t\t1;\n\t}\n\n\t#getDevicePixelRation() {\n\t\tif (!this.enableHighDPI) return 1;\n\n\t\treturn window.devicePixelRatio || 1;\n\t}\n\n\t#getDrawRatio(backingStoreRatio, devicePixelRatio) {\n\t\treturn devicePixelRatio / backingStoreRatio;\n\t}\n\n\t// eslint-disable-next-line max-statements\n\tsetSize({ width, height }) {\n\t\t// Calculate the display density pixel ratio\n\t\tconst backingStoreRatio = this.#getBackingStoreRatio(this.context);\n\t\tconst devicePixelRatio = this.#getDevicePixelRation();\n\t\tthis.drawRatio = this.#getDrawRatio(backingStoreRatio, devicePixelRatio);\n\n\t\t// Set the canvas size\n\t\tif (backingStoreRatio !== devicePixelRatio) {\n\t\t\t// Set the virtual canvas size to the real resolution\n\t\t\tthis.canvas.width = width * this.drawRatio;\n\t\t\tthis.canvas.height = height * this.drawRatio;\n\n\t\t\t// Set the presented canvas size to the visible resolution\n\t\t\tthis.canvas.style.width = `${width}px`;\n\t\t\tthis.canvas.style.minWidth = `${width}px`;\n\t\t\tthis.canvas.style.height = `${height}px`;\n\t\t\tthis.canvas.style.minHeight = `${height}px`;\n\t\t} else {\n\t\t\t// 1:1 ratio, just scale it\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\n\t\t\tthis.canvas.style.width = \"\";\n\t\t\tthis.canvas.style.height = \"\";\n\t\t}\n\n\t\t// Scale the canvas according to the ratio\n\t\tthis.context.scale(this.drawRatio, this.drawRatio);\n\n\t\t// Save the virtual size of the canvas\n\t\tthis.virtualWidth = width;\n\t\tthis.virtualHeight = height;\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\t/**\n\t * Draws this canvas to a given context\n\t *\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\tdrawBufferTo(x, y, ctx) {\n\t\tctx.save();\n\t\tctx.scale(1 / this.drawRatio, 1 / this.drawRatio);\n\t\tctx.drawImage(this.canvas, x, y);\n\t\tctx.restore();\n\t}\n\n\t/**\n\t * Attaches the canvas element as child to a given HTMLElement\n\t *\n\t * @param {HTMLElement} element The parent element to attach the canvas\n\t */\n\tattachToElement(element) {\n\t\telement.appendChild(this.canvas);\n\t}\n\n\tget width() {\n\t\treturn this.virtualWidth || this.canvas.width;\n\t}\n\n\tget height() {\n\t\treturn this.virtualHeight || this.canvas.height;\n\t}\n\n}"]}